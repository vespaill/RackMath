{"version":3,"sources":["fire.png","components/icons/barbell.jsx","components/icons/plate.jsx","components/icons/info.jsx","components/icons/fire.jsx","components/navBarBottom.jsx","components/invPlateGroup.jsx","components/inventory.jsx","components/common/notFound.jsx","components/loadDiagram.jsx","utils/limitPlateHeight.js","components/loadForm.jsx","components/loadPlateCalc.jsx","components/setContainer.jsx","components/warmUpSetCalc.jsx","components/about.jsx","utils/inventory.js","App.js","utils/calcBgColor.js","serviceWorker.js","index.js"],"names":["module","exports","Barbell","className","Icon","Fire","src","fireIcon","alt","NavBarBottom","activeClassName","to","InvPlateGroup","props","value","quantity","bgColor","onClick","style","opacity","Inventory","unit","barbell","availablePlates","onUnitClick","onPlateGroupClick","console","log","Row","variant","minWidth","map","plate","index","color","Col","key","xs","NotFound","LoadDiagram","calculatedPlates","left","height","min_px","max_px","LoadForm","Form","onSubmit","e","InputGroup","FormControl","type","name","placeholder","aria-label","min","step","onFocus","currentTarget","Append","Text","Button","btnText","LoadPlateCalc","SetContainer","load","percentage","WarmUpSetCalc","workingWeight","warmUpSets","onLoad","pair","containerData","About","textAlign","target","href","modQuantity","plateObjs","modifier","reduce","prev","cur","Math","floor","expandFromQuantity","array","j","push","roundToNearestFive","remainder","App","state","lbs","kg","percentages","handleUnitClick","setState","handlePlateGroupClick","cpy","i","findIndex","element","handleLoadSubmit","preventDefault","firstElementChild","blur","handleLoad","loadInput","halfQuantity","validateLoad","valid","errMsg","calculatePlates","success","warn","msg","severity","calcdPlateObjs","toast","error","prv","targetLoad","workingLoad","length","handleWorkingWeightSubmit","forEach","percent","input","this","loaderData","inventoryData","warmUpData","paddingBottom","limit","autoClose","hideProgressBar","pauseOnFocusLoss","draggable","pauseOnHover","path","render","component","from","exact","Component","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.9c59fac5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/fire.fe489d1d.png\";","import React from 'react';\r\nimport '../../css/icons/barbell.css';\r\n\r\nconst Barbell = () => {\r\n  return (\r\n    <div className=\"barbell-icon\">\r\n      <div className=\"barbell\">\r\n        <div className=\"barbell__shaft\"></div>\r\n        <div className=\"plate-group--1\">\r\n          <div className=\"plate-group__plate--small\"></div>\r\n          <div className=\"plate-group__plate--med\"></div>\r\n          <div className=\"plate-group__plate--large\"></div>\r\n        </div>\r\n        <div className=\"plate-group--2\">\r\n          <div className=\"plate-group__plate--small\"></div>\r\n          <div className=\"plate-group__plate--med\"></div>\r\n          <div className=\"plate-group__plate--large\"></div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Barbell;\r\n","import React from 'react';\r\nimport '../../css/icons/plate.css';\r\n\r\nconst Barbell = () => {\r\n  return (\r\n    <div className=\"plate-icon\">\r\n      <div className=\"plate__outline\"></div>\r\n      <div className=\"plate__circle\"></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Barbell;\r\n","import React from 'react';\r\nimport '../../css/icons/info.css';\r\n\r\nconst Icon = () => (\r\n  <div className=\"info-icon\">\r\n    <div>i</div>\r\n  </div>\r\n);\r\n\r\nexport default Icon;\r\n","import React from 'react';\r\nimport fireIcon from '../../fire.png'\r\nimport '../../css/icons/fire.css'\r\n\r\nconst Fire = () => {\r\n  return <img className=\"fire-icon\" src={fireIcon} alt=\"fire\" />;\r\n};\r\n\r\nexport default Fire;\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport '../css/navBarBottom.css';\r\nimport Barbell from './icons/barbell';\r\nimport Plate from './icons/plate';\r\nimport Info from './icons/info';\r\nimport Fire from './icons/fire';\r\n\r\nconst NavBarBottom = () => {\r\n  return (\r\n  // <nav className=\"bg-red\">\r\n  <nav className=\"bg-red fixed-bottom navbar navbar-dark\">\r\n      <div className=\"navbar-nav navbar-expand\">\r\n        <NavLink className=\"nav-item\" activeClassName=\"active-class\" to=\"/home\">\r\n          <Barbell />\r\n        </NavLink>\r\n        <NavLink\r\n          className=\"nav-item\"\r\n          activeClassName=\"active-class\"\r\n          to=\"/warmup\"\r\n        >\r\n          <Fire />\r\n        </NavLink>\r\n        <NavLink\r\n          className=\"nav-item\"\r\n          activeClassName=\"active-class\"\r\n          to=\"/inventory\"\r\n        >\r\n          <Plate />\r\n        </NavLink>\r\n        <NavLink\r\n          className=\"nav-item\"\r\n          activeClassName=\"active-class\"\r\n          to=\"/about\"\r\n        >\r\n          <Info />\r\n        </NavLink>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default NavBarBottom;\r\n","import React from 'react';\r\n\r\nconst InvPlateGroup = props => {\r\n  const { value, quantity, bgColor, onClick } = props;\r\n  // const { onPress, onRelease } = props;\r\n  return (\r\n    <div className=\"plate-group text-center\">\r\n      <button\r\n        onClick={() => onClick(value)}\r\n        // onMouseDown={() => onPress(value)}\r\n        // onMouseUp={() => onRelease(value)}\r\n        className={'plate-group__plate' + (quantity ? ' bg-' + bgColor : '')}\r\n      >\r\n        <span className=\"center-vertically\">{value}</span>\r\n      </button>\r\n      <div\r\n        className=\"plate-group__quantity\"\r\n        style={{ opacity: quantity ? '100%' : '0' }}\r\n      >\r\n        <span className=\"center-vertically unselectable\">{quantity}</span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InvPlateGroup;\r\n","import React from 'react';\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport InvPlateGroup from './invPlateGroup';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport '../css/inventory.css';\r\n\r\nconst Inventory = props => {\r\n  const {\r\n    unit,\r\n    barbell,\r\n    availablePlates,\r\n    onUnitClick,\r\n    onPlateGroupClick\r\n  } = props;\r\n\r\n  console.log(props);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container\">\r\n        <Row className=\"d-flex justify-content-between\">\r\n          <h1>Unit</h1>\r\n          <button\r\n            className=\"unit-btn\"\r\n            variant=\"danger\"\r\n            onClick={() => onUnitClick()}\r\n          >\r\n            {unit}\r\n          </button>\r\n        </Row>\r\n        <Row className=\"d-flex justify-content-between\">\r\n          <h1>Barbell</h1>\r\n          <h1>{barbell[unit]}</h1>\r\n        </Row>\r\n        <Row className=\"d-flex justify-content-center\">\r\n          <h1>Available plates</h1>\r\n        </Row>\r\n      </div>\r\n      <Row style={{ minWidth: '300px' }}>\r\n        {availablePlates[unit].map((plate, index) => {\r\n          const { value, color, quantity } = plate;\r\n          return (\r\n            <Col key={index} xs={4}>\r\n              <InvPlateGroup\r\n                onClick={onPlateGroupClick}\r\n                value={value}\r\n                quantity={quantity}\r\n                bgColor={color}\r\n              />\r\n            </Col>\r\n          );\r\n        })}\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Inventory;\r\n","import React from 'react';\r\n\r\nconst NotFound = () => {\r\n  return <h1>Not Found</h1>;\r\n};\r\n\r\nexport default NotFound;\r\n","import React from 'react';\r\nimport { limitPlateHeight } from '../utils/limitPlateHeight';\r\nimport '../css/loadDiagram.css';\r\n\r\nconst LoadDiagram = props => {\r\n  return (\r\n    <div className=\"load\">\r\n      <div className=\"load__barbell--shaft\">\r\n        <div>{props.barbell}</div>\r\n      </div>\r\n      <div className=\"load__barbell--sleeve-threshold\" />\r\n\r\n      <div className=\"load__plate-group\">\r\n        <div style={{ opacity: '0px' }} className=\"plate-container\" />\r\n        {props.calculatedPlates.map((plate, index) => (\r\n          <div\r\n            key={index}\r\n            style={{ left: `${index * 32 + 32}px` }}\r\n            className=\"plate-container\"\r\n          >\r\n            <div\r\n              className={`plate-container__plate center-vertically bg-${plate.color}`}\r\n              style={{\r\n                height: `${limitPlateHeight(plate.value * 8, 35, 315)}px`\r\n              }}\r\n            />\r\n            <div className=\"plate-container__plate--text center-vertically\">\r\n              {plate.value}\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoadDiagram;\r\n","export const limitPlateHeight = (height, min_px, max_px) => {\r\n  if (height >= max_px) return max_px;\r\n  if (height <= min_px) return min_px;\r\n  return height;\r\n};","import React from 'react';\r\nimport { Form, InputGroup, FormControl, Button } from 'react-bootstrap';\r\nimport '../css/loadForm.css';\r\n\r\nconst LoadForm = props => {\r\n  return (\r\n    <Form onSubmit={e => props.onSubmit(e)}>\r\n      <InputGroup>\r\n        <FormControl\r\n          className=\"weight-input__form\"\r\n          type=\"number\"\r\n          name=\"loadInput\"\r\n          placeholder={props.placeholder}\r\n          aria-label=\"weight\"\r\n          min=\"0\"\r\n          step=\"0.5\"\r\n          onFocus={e => { e.currentTarget.value = ''; }}\r\n        />\r\n        <InputGroup.Append>\r\n          <InputGroup.Text className=\"weight-input__text\">\r\n            {props.unit}\r\n          </InputGroup.Text>\r\n        </InputGroup.Append>\r\n      </InputGroup>\r\n      <Button className=\"mx-auto d-block\" variant=\"dark\" type=\"submit\">\r\n        {props.btnText}\r\n      </Button>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default LoadForm;\r\n","import React from 'react';\r\nimport LoadDiagram from './loadDiagram';\r\nimport LoadForm from './loadForm';\r\n\r\nconst LoadPlateCalc = props => {\r\n  return (\r\n    <>\r\n      <LoadForm\r\n        unit={props.unit}\r\n        onSubmit={props.onSubmit}\r\n        placeholder=\"Enter Weight\"\r\n        btnText=\"Load\"\r\n      />\r\n      <LoadDiagram\r\n        barbell={props.barbell}\r\n        calculatedPlates={props.calculatedPlates}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LoadPlateCalc;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Button } from 'react-bootstrap';\r\nimport '../css/setContainer.css';\r\n\r\nconst SetContainer = props => {\r\n  const { unit, load, percentage } = props;\r\n  return (\r\n    <div className=\"set-container d-flex justify-content-between\">\r\n      <div className=\"percent-container\">\r\n        <span className=\"percentage badge badge-warning\">{percentage*100}%</span>\r\n      </div>\r\n      <span className=\"set\">{`${load} ${unit}`}</span>\r\n      <Link to=\"/home\">\r\n        <Button className=\"btn btn-dark\" onClick={() => props.onClick(load)}>\r\n          Load\r\n        </Button>\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SetContainer;\r\n","import React from 'react';\r\nimport LoadForm from './loadForm';\r\nimport SetContainer from './setContainer';\r\nimport { Row } from 'react-bootstrap';\r\nimport '../css/warmUpSetCalc.css';\r\n\r\nconst WarmUpSetCalc = props => {\r\n  const { workingWeight, warmUpSets, unit, onSubmit, onLoad } = props;\r\n  return (\r\n    <>\r\n      <Row className=\"d-flex justify-content-center\">\r\n        <h1>Warm Up Sets Calculator</h1>\r\n      </Row>\r\n      <LoadForm\r\n        unit={unit}\r\n        onSubmit={onSubmit}\r\n        placeholder=\"Working Weight\"\r\n        btnText=\"Calculate\"\r\n      />\r\n      <div className=\"setList-container\">\r\n        <div className=\"setList mx-auto\">\r\n          {warmUpSets.map((pair, index) => {\r\n            const [percentage, load] = pair;\r\n            const containerData = { unit, percentage, load };\r\n            return (\r\n              <SetContainer key={index} {...containerData} onClick={onLoad} />\r\n            );\r\n          })}\r\n          {workingWeight !== -1 && (\r\n            <SetContainer\r\n              unit={unit}\r\n              load={workingWeight}\r\n              percentage={1}\r\n              onClick={onLoad}\r\n            />\r\n          )}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default WarmUpSetCalc;\r\n","import React from 'react';\r\n\r\nconst About = () => {\r\n  return (\r\n    <div\r\n      className=\"center-vertically\"\r\n      style={{\r\n        textAlign: 'justify'\r\n      }}\r\n    >\r\n      Barbell Loader was inspired by{' '}\r\n      <a target=\"#blank\" href=\"https://www.happyliftingco.com/pages/rackmath\">RackMath</a> and\r\n      built from scratch by Victor Espaillat with the help of React.js and\r\n      Bootstrap.\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default About;\r\n","const modQuantity = (plateObjs, modifier) => {\r\n  return plateObjs.reduce((prev, cur) => {\r\n    // Filter out plates with 0 quantity.\r\n    if (cur.quantity > 0) {\r\n      return [\r\n        ...prev,\r\n        {\r\n          value: cur.value,\r\n          color: cur.color,\r\n          // Half quantity because we want to work with one side of barbell.\r\n          quantity: Math.floor(cur.quantity * modifier)\r\n        }\r\n      ];\r\n    }\r\n    return prev;\r\n  }, []);\r\n};\r\n\r\nconst expandFromQuantity = plateObjs => {\r\n  const array = [];\r\n  for (let plate of plateObjs) {\r\n    let j = Math.floor(plate.quantity);\r\n    while (j > 0) {\r\n      array.push({ value: plate.value, color: plate.color });\r\n      j--;\r\n    }\r\n  }\r\n  return array;\r\n};\r\n\r\nexport { modQuantity, expandFromQuantity };\r\n","import React, { Component } from 'react';\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport { ToastContainer, toast } from 'react-toastify';\nimport NavBarBottom from './components/navBarBottom';\nimport Inventory from './components/inventory';\nimport NotFound from './components/common/notFound';\nimport LoadPlateCalc from './components/loadPlateCalc';\nimport WarmUpSetCalc from './components/warmUpSetCalc';\nimport About from './components/about';\nimport { modQuantity, expandFromQuantity } from './utils/inventory';\nimport { calcBgColor } from './utils/calcBgColor';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'react-toastify/dist/ReactToastify.css';\nimport './css/App.css';\nimport './css/utils.css';\nimport './css/toastify.css';\n\nconst MAX_PLATES = 8;\n\nconst roundToNearestFive = value => {\n  const remainder = value % 5;\n  if (remainder >= 2.5) return value - remainder + 5;\n  return value - remainder;\n};\n\nclass App extends Component {\n  state = {\n    // Inventory related\n    unit: 'lbs',\n    barbell: {\n      lbs: 45,\n      kg: 20\n    },\n    availablePlates: {\n      lbs: [\n        { value: 100, quantity: 0 },\n        { value: 65, quantity: 0 },\n        { value: 55, quantity: 0 },\n        { value: 50, quantity: 0 },\n        { value: 45, quantity: MAX_PLATES },\n        { value: 35, quantity: 0 },\n        { value: 30, quantity: 0 },\n        { value: 25, quantity: MAX_PLATES },\n        { value: 20, quantity: 0 },\n        { value: 15, quantity: 0 },\n        { value: 12.5, quantity: 0 },\n        { value: 10, quantity: MAX_PLATES },\n        { value: 7.5, quantity: 0 },\n        { value: 5, quantity: MAX_PLATES },\n        { value: 2.5, quantity: MAX_PLATES },\n        { value: 1.25, quantity: 0 },\n        { value: 1, quantity: 0 },\n        { value: 0.75, quantity: 0 },\n        { value: 0.5, quantity: 0 },\n        { value: 0.25, quantity: 0 }\n      ],\n      kg: [\n        { value: 50, quantity: 0 },\n        { value: 45, quantity: 0 },\n        { value: 35, quantity: 0 },\n        { value: 30, quantity: 0 },\n        { value: 25, quantity: 0 },\n        { value: 20, quantity: MAX_PLATES },\n        { value: 15, quantity: 0 },\n        { value: 12.5, quantity: 0 },\n        { value: 10, quantity: MAX_PLATES },\n        { value: 7.5, quantity: 0 },\n        { value: 5, quantity: MAX_PLATES },\n        { value: 3, quantity: 0 },\n        { value: 2.5, quantity: MAX_PLATES },\n        { value: 2, quantity: 0 },\n        { value: 1.5, quantity: 0 },\n        { value: 1.25, quantity: MAX_PLATES },\n        { value: 1, quantity: 0 },\n        { value: 0.75, quantity: 0 },\n        { value: 0.5, quantity: 0 },\n        { value: 0.25, quantity: 0 }\n      ]\n    },\n    calculatedPlates: [],\n\n    // Warm Up related\n    percentages: [0.5, 0.6, 0.7, 0.8, 0.9],\n    workingWeight: -1,\n    warmUpSets: []\n  };\n\n  componentDidMount() {\n    let availablePlates = {};\n\n    ['lbs', 'kg'].forEach(unit => {\n      availablePlates[unit] = this.state.availablePlates[\n        unit\n      ].map((plate, index) => ({ ...plate, color: calcBgColor(index) }));\n    });\n\n    this.setState({ availablePlates });\n  }\n\n  render() {\n    const {\n      unit,\n      barbell,\n      availablePlates,\n      calculatedPlates,\n      workingWeight,\n      warmUpSets\n    } = this.state;\n    const loaderData = { unit, barbell: barbell[unit], calculatedPlates };\n    const inventoryData = { unit, barbell, availablePlates };\n    const warmUpData = { unit, workingWeight, warmUpSets };\n    return (\n      <>\n        <div className=\"container\" style={{ paddingBottom: '70px' }}>\n          <ToastContainer\n            limit={1}\n            autoClose={2000}\n            hideProgressBar\n            pauseOnFocusLoss={false}\n            draggable={false}\n            pauseOnHover={false}\n          />\n          <Switch>\n            <Route\n              path=\"/home\"\n              render={() => (\n                <LoadPlateCalc\n                  {...loaderData}\n                  onSubmit={this.handleLoadSubmit}\n                />\n              )}\n            />\n            <Route\n              path=\"/inventory\"\n              render={() => (\n                <Inventory\n                  {...inventoryData}\n                  onPlateGroupClick={this.handlePlateGroupClick}\n                  onUnitClick={this.handleUnitClick}\n                />\n              )}\n            />\n            <Route\n              path=\"/warmup\"\n              render={() => (\n                <WarmUpSetCalc\n                  {...warmUpData}\n                  onSubmit={this.handleWorkingWeightSubmit}\n                  onLoad={this.handleLoad}\n                />\n              )}\n            ></Route>\n            <Route path=\"/about\" component={About}></Route>\n            <Route path=\"/not-found\" component={NotFound} />\n            <Redirect from=\"/\" exact to=\"/home\" />\n            <Redirect to=\"/not-found\" />\n          </Switch>\n        </div>\n        <NavBarBottom />\n      </>\n    );\n  }\n\n  handleUnitClick = () => {\n    let { unit } = this.state;\n    if (unit === 'lbs') unit = 'kg';\n    else unit = 'lbs';\n\n    this.setState({\n      unit,\n      calculatedPlates: [], // reset calculated plates\n      workingWeight: -1, // reset working weight\n      warmUpSets: [] // reset working weight\n    });\n  };\n\n  handlePlateGroupClick = value => {\n    const { unit } = this.state;\n    const cpy = { ...this.state.availablePlates };\n    const i = cpy[unit].findIndex(element => element.value === value);\n    cpy[unit][i].quantity = (cpy[unit][i].quantity + 2) % (MAX_PLATES + 2);\n    this.setState({ availablePlates: cpy });\n  };\n\n  handleLoadSubmit = e => {\n    e.preventDefault();\n    // Blur in order to hide keyboard on mobile.\n    e.currentTarget.firstElementChild.firstElementChild.blur();\n    this.handleLoad(e.currentTarget.loadInput.value);\n    e.currentTarget.loadInput.value = '';\n  };\n\n  handleLoad = load => {\n    const { unit, availablePlates } = this.state;\n    const barbell = this.state.barbell[unit];\n    const halfQuantity = modQuantity(availablePlates[unit], 0.5);\n    const plateObjs = expandFromQuantity(halfQuantity);\n    const { valid, errMsg } = this.validateLoad(load, barbell, plateObjs);\n\n    if (!valid) {\n      this.setState({ calculatedPlates: [] });\n      toast.error(errMsg);\n    } else {\n      const {\n        success,\n        warn: { msg, severity },\n        calcdPlateObjs\n      } = this.calculatePlates(unit, load, barbell, plateObjs);\n\n      if (severity === 'low') toast.success(msg);\n      else if (severity === 'med') toast.warn(msg);\n      else if (severity === 'high') toast.error(msg);\n\n      if (success) this.setState({ calculatedPlates: calcdPlateObjs });\n    }\n  };\n\n  validateLoad = (load, barbell, plateObjs) => {\n    if (load < barbell)\n      return {\n        errMsg: \"That's not even the bar!\",\n        valid: false\n      };\n\n    const totalWeightAvail =\n      barbell + 2 * plateObjs.reduce((prv, cur) => prv + cur.value, 0);\n\n    if (load > totalWeightAvail)\n      return {\n        errMsg: \"Your inventory doesn't work with that weight\",\n        valid: false\n      };\n\n    return { valid: true };\n  };\n\n  /**\n   * Returns an array containing the plates (weights) that must loaded on one\n   * side of a barbell in order to meet a target load.\n   * @param {Number} targetLoad Weight to load onto barbell\n   * @param {Number} barbell Weight of the barbell\n   * @param {Array} plateObjs array of weight value and color pairs.\n   */\n  calculatePlates = (unit, targetLoad, barbell, plateObjs) => {\n    let workingLoad = targetLoad - barbell;\n    if (workingLoad === 0)\n      return {\n        success: true,\n        warn: { msg: 'Just the bar', severity: 'low' },\n        calcdPlateObjs: []\n      };\n\n    /* Showing how to load one side of the barbell. Presumably, both sides are\n       identical. */\n    workingLoad /= 2;\n    let calcdPlateObjs = [];\n\n    for (let plate of plateObjs) {\n      if (workingLoad >= plate.value) {\n        calcdPlateObjs.push(plate);\n        if (calcdPlateObjs.length > MAX_PLATES)\n          return {\n            success: false,\n            warn: { msg: 'Not enough room on the bar!', severity: 'high' }\n          };\n        workingLoad -= plate.value;\n      }\n    }\n\n    if (workingLoad !== 0) {\n      return {\n        success: true,\n        warn: {\n          msg: `${workingLoad * 2} ${unit} has been rounded off.`,\n          severity: 'med'\n        },\n        calcdPlateObjs\n      };\n    }\n    return {\n      success: true,\n      warn: { msg: `${targetLoad} ${unit} loaded!`, severity: 'low' },\n      calcdPlateObjs\n    };\n  };\n\n  handleWorkingWeightSubmit = e => {\n    e.preventDefault();\n    e.currentTarget.firstElementChild.firstElementChild.blur(); // hide keyboard\n    const { value: workingWeight } = e.currentTarget.loadInput;\n    e.currentTarget.loadInput.value = ''; // clear input\n\n    if (workingWeight) {\n      const warmUpSets = [];\n      const { percentages } = this.state;\n      percentages.forEach(percent => {\n        warmUpSets.push([percent, roundToNearestFive(workingWeight * percent)]);\n      });\n      this.setState({ workingWeight, warmUpSets });\n    } else {\n      // reset\n      this.setState({ workingWeight: -1, warmUpSets: [] });\n    }\n  };\n}\n\nexport default App;\n","export const calcBgColor = input => {\r\n  if (input % 6 === 0) return 'black';\r\n  if (input % 5 === 0) return 'yellow';\r\n  if (input % 4 === 0) return 'red';\r\n  if (input % 3 === 0) return 'purple';\r\n  if (input % 2 === 0) return 'green';\r\n  return 'cyan';\r\n};\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport App from './App';\nimport './css/index.css';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}