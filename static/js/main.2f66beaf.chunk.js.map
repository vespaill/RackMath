{"version":3,"sources":["icons/fire.png","icons/cog.png","components/icons/barbell.jsx","components/icons/plate.jsx","components/icons/info.jsx","components/icons/fire.jsx","components/navBar.jsx","components/invPlateGroup.jsx","components/common/header.jsx","components/inventory.jsx","components/common/notFound.jsx","components/loaderForm.jsx","components/loadValue.jsx","components/loadDiagram.jsx","utils/limitPlateHeight.js","components/loader.jsx","components/icons/cog.jsx","components/setsCalcForm.jsx","components/setContainer.jsx","components/setsCalculator.jsx","components/about.jsx","utils/inventory.js","App.js","utils/calcBgColor.js","serviceWorker.js","index.js"],"names":["module","exports","Barbell","className","Icon","Fire","src","fireIcon","alt","NavBar","navLinks","url","pathname","from","component","commonProps","activeClassName","replace","map","index","key","to","InvPlateGroup","props","value","quantity","bgColor","onClick","style","opacity","Header","children","textJustify","React","Children","count","Row","child","Fragment","Inventory","unit","barbell","availPlates","onUnitClick","onPlateGroupClick","onClear","variant","e","minWidth","plate","color","plateGroupProps","Col","xs","NotFound","LoaderForm","Form","onSubmit","InputGroup","FormControl","type","name","placeholder","aria-label","min","step","onFocus","currentTarget","select","Append","Text","Button","btnText","LoadValue","prevCalcdLoad","calcdLoad","id1","shortid","generate","id2","LoadDiagram","barbellWeight","calcdPlates","loadValProps","left","height","min_px","max_px","Loader","resetPrevLoad","formProps","diagramProps","useLocation","useEffect","width","Cog","cogIcon","SetsCalcForm","formControlProps","maxWeight","max","defaultValue","SetContainer","percentage","weight","numReps","isWorkingSet","workSetClass","Math","round","SetsCalculator","workWeight","workNumReps","warmUpSets","contProps","onLoad","workWeightContProps","href","target","set","additionalProps","About","textAlign","modQuantity","plateObjs","modifier","reduce","prev","cur","floor","expandFromQuantity","array","j","push","calcWarmUpReps","workingNumSets","App","state","lbs","kg","percentages","handleUnitClick","setState","classList","add","remove","handlePlateGroupClick","i","findIndex","element","handleLoadSubmit","preventDefault","firstElementChild","blur","handleLoad","loadInput","load","halfQuantity","availPlatesOneSide","validateLoad","valid","errMsg","calculatePlates","success","warn","roundOff","toast","up","amount","error","acc","targetLoad","sum","smallest","dif","abs","length","roundOffAmount","undefined","handleWorkSetSubmit","querySelectorAll","forEach","elem","numRepsInput","handlePlateGroupsClear","input","this","loaderProps","invProps","setsCalcProps","toastProps","autoClose","hideProgressBar","pauseOnFocusLoss","draggable","pauseOnHover","newestOnTop","paddingBottom","path","render","exact","Component","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.2f66beaf.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/fire.fe489d1d.png\";","module.exports = __webpack_public_path__ + \"static/media/cog.f959e642.png\";","import React from 'react';\r\nimport '../../css/icons/barbell.css';\r\n\r\nconst Barbell = () => {\r\n  return (\r\n    <div className=\"barbell-icon\">\r\n      <div className=\"barbell\">\r\n        <div className=\"barbell__shaft\"></div>\r\n        <div className=\"plate-group--1\">\r\n          <div className=\"plate-group__plate--small\"></div>\r\n          <div className=\"plate-group__plate--med\"></div>\r\n          <div className=\"plate-group__plate--large\"></div>\r\n        </div>\r\n        <div className=\"plate-group--2\">\r\n          <div className=\"plate-group__plate--small\"></div>\r\n          <div className=\"plate-group__plate--med\"></div>\r\n          <div className=\"plate-group__plate--large\"></div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Barbell;\r\n","import React from 'react';\r\nimport '../../css/icons/plate.css';\r\n\r\nconst Barbell = () => {\r\n  return (\r\n    <div className=\"plate-icon\">\r\n      <div className=\"plate__outline\"></div>\r\n      <div className=\"plate__circle\"></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Barbell;\r\n","import React from 'react';\r\nimport '../../css/icons/info.css';\r\n\r\nconst Icon = () => (\r\n  <div className=\"info-icon\">\r\n    <div>i</div>\r\n  </div>\r\n);\r\n\r\nexport default Icon;\r\n","import React from 'react';\r\nimport fireIcon from '../../icons/fire.png'\r\nimport '../../css/icons/fire.css'\r\n\r\nconst Fire = () => {\r\n  return <img className=\"fire-icon\" src={fireIcon} alt=\"fire\" />;\r\n};\r\n\r\nexport default Fire;\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport '../css/navBar.css';\r\nimport Barbell from './icons/barbell';\r\nimport Plate from './icons/plate';\r\nimport Info from './icons/info';\r\nimport Fire from './icons/fire';\r\n\r\nconst NavBar = () => {\r\n  const navLinks = [\r\n    { url: { pathname: '/home', from: 'navBar' }, component: <Barbell /> },\r\n    { url: '/warmup', component: <Fire /> },\r\n    { url: '/inventory', component: <Plate /> },\r\n    { url: '/about', component: <Info /> }\r\n  ];\r\n  const commonProps = { className: 'nav-item', activeClassName: 'active-class', replace: true };\r\n  return (\r\n    <nav className=\"bg-red navbar fixed-bottom d-flex justify-content-between\">\r\n      {navLinks.map(({ url, component }, index) => (\r\n        <NavLink key={index} {...commonProps} to={url}>\r\n          {component}\r\n        </NavLink>\r\n      ))}\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","import React from 'react';\r\n\r\nconst InvPlateGroup = props => {\r\n  const { value, quantity, bgColor, onClick } = props;\r\n\r\n  return (\r\n    <div className=\"plate-group text-center\">\r\n      <button onClick={() => onClick(value)} className={'plate-group__plate' + (quantity ? ' bg-' + bgColor : '')}>\r\n        <span className=\"center-vertically\">{value}</span>\r\n      </button>\r\n      <div className=\"plate-group__quantity\" style={{ opacity: quantity > 0 ? '100%' : '0' }}>\r\n        <span className=\"center-vertically unselectable\">{quantity}</span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InvPlateGroup;\r\n","import React from 'react';\r\nimport { Row } from 'react-bootstrap';\r\n\r\nconst Header = ({ children }) => {\r\n  const textJustify = React.Children.count(children) > 1 ? 'between' : 'center';\r\n\r\n  return (\r\n    <Row className={`my-1 mx-3 d-flex justify-content-${textJustify}`}>\r\n      {React.Children.map(children, child => (\r\n        <React.Fragment>{child}</React.Fragment>\r\n      ))}\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport InvPlateGroup from './invPlateGroup';\r\nimport Header from './common/header';\r\nimport '../css/inventory.css';\r\n\r\nconst Inventory = props => {\r\n  const { unit, barbell, availPlates, onUnitClick, onPlateGroupClick, onClear } = props;\r\n\r\n  return (\r\n    <>\r\n      <Header>\r\n        <h1>Unit</h1>\r\n        <button className=\"btn-unit\" variant=\"danger\" onClick={e => onUnitClick(e)}>\r\n          {unit}\r\n        </button>\r\n      </Header>\r\n      <Header>\r\n        <h1>Barbell</h1>\r\n        <h1>{barbell[unit]}</h1>\r\n      </Header>\r\n      <Header>\r\n        <h1>Available plates</h1>\r\n      </Header>\r\n      <Row style={{ minWidth: '300px' }}>\r\n        {availPlates[unit].map((plate, index) => {\r\n          const { value, color, quantity } = plate;\r\n          const plateGroupProps = { onClick: onPlateGroupClick, value, quantity, bgColor: color };\r\n          return (\r\n            <Col key={index} xs={4}>\r\n              <InvPlateGroup {...plateGroupProps} />\r\n            </Col>\r\n          );\r\n        })}\r\n        <Col xs={4}>\r\n          <div className=\"btn-clear-container text-center\">\r\n            <button className=\"btn-clear\" onClick={() => onClear()}>\r\n              <span className=\"center-vertically\">clear</span>\r\n            </button>\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Inventory;\r\n","import React from 'react';\r\n\r\nconst NotFound = () => {\r\n  return <h1>Not Found</h1>;\r\n};\r\n\r\nexport default NotFound;\r\n","import React from 'react';\r\nimport { Form, InputGroup, FormControl, Button } from 'react-bootstrap';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport '../css/loadForm.css';\r\n\r\nconst LoaderForm = props => {\r\n  return (\r\n    <Form onSubmit={e => props.onSubmit(e)}>\r\n      <InputGroup>\r\n        <FormControl\r\n          className=\"text-right\"\r\n          type=\"number\"\r\n          name=\"loadInput\"\r\n          placeholder={props.placeholder}\r\n          aria-label=\"weight\"\r\n          min=\"0\"\r\n          step=\"0.5\"\r\n          onFocus={e => { e.currentTarget.select(); }}\r\n        />\r\n        <InputGroup.Append>\r\n          <InputGroup.Text className=\"weight-input__text\">\r\n            {props.unit}\r\n          </InputGroup.Text>\r\n        </InputGroup.Append>\r\n      </InputGroup>\r\n      <div>\r\n        <Button className=\"mx-auto d-block\" variant=\"dark\" type=\"submit\">\r\n          {props.btnText}\r\n        </Button>\r\n      </div>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default LoaderForm;\r\n","import React from 'react';\r\nimport '../css/loadValue.css';\r\nimport shortid from 'shortid';\r\n\r\nconst LoadValue = props => {\r\n  const { prevCalcdLoad, calcdLoad, unit } = props;\r\n\r\n  const id1 = shortid.generate();\r\n  const id2 = shortid.generate();\r\n\r\n  return (\r\n    <div className=\"load-value center-vertically\">\r\n      {prevCalcdLoad > -1 && (\r\n        <div key={id1} className=\"load-value__prev badge badge-success animate-leave\">\r\n          {`${prevCalcdLoad} ${unit}`}\r\n        </div>\r\n      )}\r\n      {calcdLoad > -1 && (\r\n        <div key={id2} className=\"load-value__cur badge badge-success animate-enter\">\r\n          {`${calcdLoad} ${unit}`}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoadValue;\r\n","import React from 'react';\r\nimport { limitPlateHeight } from '../utils/limitPlateHeight';\r\nimport '../css/loadDiagram.css';\r\nimport LoadValue from './loadValue';\r\n\r\nconst LoadDiagram = props => {\r\n  const { unit, barbellWeight, calcdPlates, calcdLoad, prevCalcdLoad } = props;\r\n  const loadValProps = { unit, calcdLoad, prevCalcdLoad };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"load\">\r\n        <div className=\"load__barbell--shaft\">\r\n          <div>{barbellWeight}</div>\r\n        </div>\r\n        <div className=\"load__barbell--sleeve-threshold\" />\r\n        <div className=\"load__plate-group\">\r\n          <div style={{ opacity: '0px' }} className=\"plate-container\" />\r\n          {calcdPlates.map((plate, index) => (\r\n            <div key={index} className=\"plate-container\" style={{ left: `${index * 32 + 32}px` }}>\r\n              <div\r\n                className={`plate-container__plate center-vertically bg-${plate.color}`}\r\n                style={{ height: `${limitPlateHeight(plate.value * 7, 45, 315)}px` }}\r\n              />\r\n              <div className=\"plate-container__plate--text center-vertically\">{plate.value}</div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n      <LoadValue {...loadValProps} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LoadDiagram;\r\n","export const limitPlateHeight = (height, min_px, max_px) => {\r\n  if (height >= max_px) return max_px;\r\n  if (height <= min_px) return min_px;\r\n  return height;\r\n};","import React, { useEffect } from 'react';\r\nimport Header from './common/header';\r\nimport LoaderForm from './loaderForm';\r\nimport LoadDiagram from './loadDiagram';\r\nimport { useLocation, Redirect } from 'react-router-dom';\r\n\r\nconst Loader = props => {\r\n  const { unit, barbellWeight, calcdPlates, calcdLoad, prevCalcdLoad, onSubmit, resetPrevLoad } = props;\r\n  const formProps = { unit, onSubmit };\r\n  const diagramProps = { unit, barbellWeight, calcdPlates, calcdLoad, prevCalcdLoad };\r\n  const { from } = useLocation();\r\n\r\n  // Similar to componentDidMount and componentDidUpdate:\r\n  useEffect(() => {\r\n    if (from === 'navBar') resetPrevLoad();\r\n  }, [from, resetPrevLoad]);\r\n\r\n  return (from === 'navBar') ? (\r\n    <Redirect to=\"/home\" />\r\n  ) : (\r\n    <>\r\n      <Header>\r\n        <h1>Barbell Loader</h1>\r\n      </Header>\r\n      <LoaderForm {...formProps} placeholder=\"Enter Weight\" btnText=\"Load\" />\r\n      <LoadDiagram {...diagramProps} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Loader;\r\n","import React from 'react';\r\nimport cogIcon from '../../icons/cog.png';\r\n\r\nconst style = { width: '100%' };\r\nconst Cog = () => <img className=\"cog-icon\" style={style} src={cogIcon} alt=\"cog\" />;\r\n\r\nexport default Cog;\r\n","import React from 'react';\r\nimport { Form, InputGroup, FormControl, Button } from 'react-bootstrap';\r\nimport Cog from './icons/cog';\r\nimport '../css/loadForm.css';\r\n\r\nconst SetsCalcForm = props => {\r\n  const formControlProps = {\r\n    type: 'number',\r\n    min: '0',\r\n    onFocus: e => {\r\n      e.currentTarget.select();\r\n    }\r\n  };\r\n  const maxWeight = props.unit === 'kg' ? 2840 : 7000;\r\n\r\n  return (\r\n    <Form onSubmit={e => props.onSubmit(e)}>\r\n      <InputGroup>\r\n        <FormControl name=\"loadInput\" placeholder=\"weight\" step=\"0.5\" max={maxWeight} {...formControlProps} />\r\n        <InputGroup.Append>\r\n          <InputGroup.Text>{props.unit} × </InputGroup.Text>\r\n        </InputGroup.Append>\r\n        <FormControl name=\"numRepsInput\" placeholder=\"reps\" max=\"999\" step=\"1\" defaultValue=\"5\" {...formControlProps} />\r\n      </InputGroup>\r\n      <div className=\"button-group\">\r\n        <Button className=\"calc-btn\" type=\"submit\" variant=\"dark\">\r\n          {props.btnText}\r\n        </Button>\r\n        <Button className=\"settings-btn\" variant=\"dark\">\r\n          <Cog />\r\n        </Button>\r\n      </div>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default SetsCalcForm;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Button } from 'react-bootstrap';\r\nimport '../css/setContainer.css';\r\n\r\nconst SetContainer = props => {\r\n  const { unit, percentage, weight, numReps, isWorkingSet, btnText } = props;\r\n  const workSetClass = isWorkingSet ? ' working-weight' : '';\r\n\r\n  return (\r\n    <div className={'set-container d-flex justify-content-between' + workSetClass}>\r\n      <div className=\"percent-container\">\r\n        <span className=\"percentage badge badge-warning\">{Math.round(percentage * 100)}%</span>\r\n      </div>\r\n      <span className=\"set\">{`${weight} ${unit} × ${numReps}`}</span>\r\n      <Link to=\"/home\">\r\n        <Button className=\"btn btn-dark\" onClick={() => props.onClick(weight)}>\r\n          {btnText}\r\n        </Button>\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SetContainer;\r\n","import React from 'react';\r\nimport SetsCalcForm from './setsCalcForm';\r\nimport SetContainer from './setContainer';\r\nimport '../css/setsCalculator.css';\r\nimport Header from './common/header';\r\n\r\nconst SetsCalculator = props => {\r\n  const { workWeight, workNumReps, warmUpSets, unit, onSubmit, onLoad } = props;\r\n  const contProps = { unit, onClick: onLoad };\r\n  const workWeightContProps = {\r\n    percentage: 1,\r\n    weight: workWeight,\r\n    numReps: workNumReps,\r\n    isWorkingSet: true,\r\n    btnText: 'Start'\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Header>\r\n        <a href=\"https://www.t-nation.com/training/most-intelligent-way-to-warm-up\" target=\"#blank\">\r\n          <h1>Warm Up Sets Calculator</h1>\r\n        </a>\r\n      </Header>\r\n      <SetsCalcForm unit={unit} onSubmit={onSubmit} btnText='Calculate' />\r\n      <div className=\"setList-container\">\r\n        <div className=\"setList mx-auto\">\r\n          {warmUpSets.map((set, index) => {\r\n            const { percentage, weight, numReps } = set;\r\n            const additionalProps = { percentage, weight, numReps };\r\n            return <SetContainer key={index} btnText=\"Load\" {...contProps} {...additionalProps} />;\r\n          })}\r\n          {workWeight !== -1 && <SetContainer {...contProps} {...workWeightContProps} />}\r\n        </div>\r\n      </div>\r\n      {/* <div className=\"popup\" id=\"popup\"></div> */}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SetsCalculator;\r\n","import React from 'react';\r\n\r\nconst About = () => {\r\n  return (\r\n    <div\r\n      className=\"center-vertically\"\r\n      style={{\r\n        textAlign: 'justify'\r\n      }}\r\n    >\r\n      Barbell Loader was inspired by{' '}\r\n      <a target=\"#blank\" href=\"https://www.happyliftingco.com/pages/rackmath\">RackMath</a> and\r\n      built from scratch by Victor Espaillat with the help of React.js and\r\n      Bootstrap.\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default About;\r\n","const modQuantity = (plateObjs, modifier) => {\r\n  return plateObjs.reduce((prev, cur) => {\r\n    // Filter out plates with 0 quantity.\r\n    if (cur.quantity > 0) {\r\n      return [\r\n        ...prev,\r\n        {\r\n          value: cur.value,\r\n          color: cur.color,\r\n          // Half quantity because we want to work with one side of barbell.\r\n          quantity: Math.floor(cur.quantity * modifier)\r\n        }\r\n      ];\r\n    }\r\n    return prev;\r\n  }, []);\r\n};\r\n\r\nconst expandFromQuantity = plateObjs => {\r\n  const array = [];\r\n  for (let plate of plateObjs) {\r\n    let j = Math.floor(plate.quantity);\r\n    while (j > 0) {\r\n      array.push({ value: plate.value, color: plate.color });\r\n      j--;\r\n    }\r\n  }\r\n  return array;\r\n};\r\n\r\nexport { modQuantity, expandFromQuantity };\r\n","import React, { Component } from 'react';\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport { ToastContainer, toast } from 'react-toastify';\nimport NavBar from './components/navBar';\nimport Inventory from './components/inventory';\nimport NotFound from './components/common/notFound';\nimport Loader from './components/loader';\nimport SetsCalculator from './components/setsCalculator';\nimport About from './components/about';\nimport { modQuantity, expandFromQuantity } from './utils/inventory';\nimport { calcBgColor } from './utils/calcBgColor';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'react-toastify/dist/ReactToastify.css';\nimport './css/App.css';\nimport './css/utils.css';\nimport './css/toastify.css';\n\nconst MAX_PLATES = 8;\n\nconst calcWarmUpReps = (percentage, workingNumSets) => {\n  const numReps = Math.round(workingNumSets * (2 - 4 * (percentage - 0.5)));\n  return numReps > 0 ? numReps : 1;\n};\n\nclass App extends Component {\n  state = {\n    // Inventory related\n    unit: 'lbs',\n    barbell: {\n      lbs: 45,\n      kg: 20\n    },\n    availPlates: {\n      lbs: [\n        { value: 100, quantity: 0 },\n        { value: 65, quantity: 0 },\n        { value: 55, quantity: 0 },\n        { value: 50, quantity: 0 },\n        { value: 45, quantity: MAX_PLATES },\n        { value: 35, quantity: 0 },\n        { value: 30, quantity: 0 },\n        { value: 25, quantity: MAX_PLATES },\n        { value: 20, quantity: 0 },\n        { value: 15, quantity: 0 },\n        { value: 12.5, quantity: 0 },\n        { value: 10, quantity: MAX_PLATES },\n        { value: 7.5, quantity: 0 },\n        { value: 5, quantity: MAX_PLATES },\n        { value: 2.5, quantity: MAX_PLATES },\n        { value: 1.25, quantity: 0 },\n        { value: 1, quantity: 0 },\n        { value: 0.75, quantity: 0 },\n        { value: 0.5, quantity: 0 },\n        { value: 0.25, quantity: 0 }\n      ],\n      kg: [\n        { value: 50, quantity: 0 },\n        { value: 45, quantity: 0 },\n        { value: 35, quantity: 0 },\n        { value: 30, quantity: 0 },\n        { value: 25, quantity: 0 },\n        { value: 20, quantity: MAX_PLATES },\n        { value: 15, quantity: 0 },\n        { value: 12.5, quantity: 0 },\n        { value: 10, quantity: MAX_PLATES },\n        { value: 7.5, quantity: 0 },\n        { value: 5, quantity: MAX_PLATES },\n        { value: 3, quantity: 0 },\n        { value: 2.5, quantity: MAX_PLATES },\n        { value: 2, quantity: 0 },\n        { value: 1.5, quantity: 0 },\n        { value: 1.25, quantity: MAX_PLATES },\n        { value: 1, quantity: 0 },\n        { value: 0.75, quantity: 0 },\n        { value: 0.5, quantity: 0 },\n        { value: 0.25, quantity: 0 }\n      ]\n    },\n    calcdPlates: [],\n    calcdLoad: -1,\n    prevCalcdLoad: -1,\n\n    // Warm Up related\n    percentages: [0.5, 0.6, 0.7, 0.8, 0.9, 1.1],\n    workWeight: -1,\n    workNumReps: -1,\n    warmUpSets: [\n      /* {percentage, weight, numReps}, ... */\n    ]\n  };\n\n  componentDidMount() {\n    let availPlates = {};\n\n    ['lbs', 'kg'].forEach(unit => {\n      availPlates[unit] = this.state.availPlates[unit].map((plate, index) => ({\n        ...plate,\n        color: calcBgColor(index)\n      }));\n    });\n\n    this.setState({ availPlates });\n  }\n\n  render() {\n    const { unit, barbell, availPlates, calcdPlates, calcdLoad } = this.state;\n    const { prevCalcdLoad, workWeight, workNumReps, warmUpSets } = this.state;\n    const loaderProps = {\n      unit,\n      barbellWeight: barbell[unit],\n      calcdPlates,\n      calcdLoad,\n      prevCalcdLoad,\n      onSubmit: this.handleLoadSubmit,\n      resetPrevLoad: this.resetPrevLoad\n    };\n    const invProps = {\n      unit,\n      barbell,\n      availPlates,\n      onPlateGroupClick: this.handlePlateGroupClick,\n      onUnitClick: this.handleUnitClick,\n      onClear: this.handlePlateGroupsClear\n    };\n    const setsCalcProps = {\n      unit,\n      workWeight,\n      workNumReps,\n      warmUpSets,\n      onSubmit: this.handleWorkSetSubmit,\n      onLoad: this.handleLoad\n    };\n\n    const toastProps = {\n      // limit: 1,\n      autoClose: 3000,\n      hideProgressBar: true,\n      pauseOnFocusLoss: false,\n      draggable: false,\n      pauseOnHover: false,\n      newestOnTop: true\n    };\n\n    return (\n      <>\n        <div className=\"container\" style={{ paddingBottom: '70px' }}>\n          <ToastContainer {...toastProps} />\n          <Switch>\n            <Route path=\"/home\" render={() => <Loader {...loaderProps} />} />\n            <Route path=\"/inventory\" render={() => <Inventory {...invProps} />} />\n            <Route path=\"/warmup\" render={() => <SetsCalculator {...setsCalcProps} />} />\n            <Route path=\"/about\" component={About}></Route>\n            <Route path=\"/not-found\" component={NotFound} />\n            <Redirect from=\"/\" exact to=\"/home\" />\n            <Redirect to=\"/not-found\" />\n          </Switch>\n        </div>\n        <NavBar />\n      </>\n    );\n  }\n\n  handleUnitClick = e => {\n    let { unit } = this.state;\n    if (unit === 'lbs') unit = 'kg';\n    else unit = 'lbs';\n\n    this.setState({\n      unit,\n      calcdPlates: [], // reset calculated plates\n      calcdLoad: -1,\n      prevCalcdLoad: -1,\n      workWeight: -1, // reset working weight\n      warmUpSets: [] // reset working weight\n    });\n\n    e.currentTarget.classList.add('animate-wiggle');\n    e.currentTarget.classList.remove('animate-wiggle');\n  };\n\n  handlePlateGroupClick = value => {\n    const { unit } = this.state;\n    const availPlates = { ...this.state.availPlates };\n    const i = availPlates[unit].findIndex(element => element.value === value);\n    availPlates[unit][i].quantity = (availPlates[unit][i].quantity + 2) % (MAX_PLATES + 2);\n    this.setState({ availPlates, calcdPlates: [], calcdLoad: -1, prevCalcdLoad: -1 });\n  };\n\n  handleLoadSubmit = e => {\n    e.preventDefault();\n    // Blur in order to hide keyboard on mobile.\n    e.currentTarget.firstElementChild.firstElementChild.blur();\n    // console.log(e.currentTarget.firstElementChild.firstElementChild);\n    this.handleLoad(e.currentTarget.loadInput.value);\n    // e.currentTarget.loadInput.value = '';\n  };\n\n  handleLoad = load => {\n    const { unit, availPlates } = this.state;\n    const barbellWeight = this.state.barbell[unit];\n    const halfQuantity = modQuantity(availPlates[unit], 0.5);\n    const availPlatesOneSide = expandFromQuantity(halfQuantity);\n    const { valid, errMsg } = this.validateLoad(load, barbellWeight, availPlatesOneSide);\n    const prevCalcdLoad = this.state.calcdLoad;\n\n    if (!valid) {\n      this.setState({ calcdPlates: [], calcdLoad: -1, prevCalcdLoad });\n      toast.error(errMsg);\n    } else {\n      const { success, warn, calcdPlates, roundOff } = this.calculatePlates(load, barbellWeight, availPlatesOneSide);\n\n      if (warn === 'justbar') toast.success('Just the bar!');\n      else if (warn === 'roundoff') toast.warn(`Your inventory doesn't work with that weight. Rounded ${roundOff.up ? 'up' : 'down'} by ${roundOff.amount} ${unit}.`);\n      else if (warn === 'notEnoughRoom') toast.error('Not enough room on the bar!');\n\n      if (success) {\n        const calcdLoad = calcdPlates.reduce((acc, cur) => acc + cur.value, 0) * 2 + barbellWeight;\n        this.setState({ calcdPlates, calcdLoad, prevCalcdLoad });\n      } else this.setState({ calcdPlates: [], calcdLoad: -1, prevCalcdLoad });\n    }\n  };\n\n  validateLoad = (load, barbell, availPlatesOneSide) => {\n    if (load < barbell)\n      return {\n        valid: false,\n        errMsg: \"That's not even the bar!\"\n      };\n\n    const totalWeightAvail = barbell + 2 * availPlatesOneSide.reduce((acc, cur) => acc + cur.value, 0);\n\n    if (load > totalWeightAvail)\n      return {\n        valid: false,\n        errMsg: \"Your inventory doesn't work with that weight\"\n      };\n\n    return { valid: true };\n  };\n\n  /**\n   * Returns an array containing the plates objects that must loaded on one side\n   * of a barbell in order to meet a target load. If not possible, the success\n   * flag will be false.\n   * @param {Number} targetLoad - Weight to load onto barbell.\n   * @param {Number} barbellWeight - Weight of the barbell.\n   * @param {Object[]} availPlatesOneSide - Available plate objects for one side of bar.\n   * @param {Number} plateObjs[].value - The plate's weight.\n   * @param {String} plateObjs[].color - The plate's color.\n   */\n  calculatePlates = (targetLoad, barbellWeight, availPlatesOneSide) => {\n    const success = true;\n    const calcdPlates = [];\n    if (targetLoad - barbellWeight === 0) return { success, warn: 'justbar', calcdLoad: barbellWeight, calcdPlates };\n\n    // Work with one side of the barbell. Presumably, both sides are identical.\n    let calcdLoad = barbellWeight;\n    let sum = 0;\n    const smallest = availPlatesOneSide.reduce((prev, cur) => (prev < cur ? prev : cur));\n\n    for (let plate of availPlatesOneSide) {\n      sum = calcdLoad + plate.value * 2;\n      let dif = Math.abs(targetLoad - sum);\n      if (sum <= targetLoad || dif < smallest.value) {\n        calcdLoad = sum;\n        calcdPlates.push(plate);\n        if (calcdPlates.length > MAX_PLATES)\n          return { success: false, warn: 'notEnoughRoom', calcdLoad: -1, calcdPlates: [] };\n      }\n    }\n\n    const roundOffAmount = Math.abs(targetLoad - calcdLoad);\n    const warn = roundOffAmount ? 'roundoff' : undefined;\n    const roundOff = { amount: roundOffAmount, up: calcdLoad > targetLoad };\n\n    return { success, calcdLoad, calcdPlates, roundOff, warn };\n  };\n\n  handleWorkSetSubmit = e => {\n    e.preventDefault();\n    e.currentTarget.firstElementChild.querySelectorAll('input').forEach(elem => {\n      elem.blur();\n    });\n    const { value: workWeight } = e.currentTarget.loadInput;\n    const { value: workNumReps } = e.currentTarget.numRepsInput;\n\n    if (workWeight && workNumReps) {\n      const warmUpSets = [];\n      const { percentages } = this.state;\n      percentages.forEach(percentage => {\n        warmUpSets.push({\n          percentage,\n          // weight: roundToNearestStep(workWeight * percentage, 5),\n          weight: Math.round(workWeight * percentage),\n          numReps: calcWarmUpReps(percentage, workNumReps)\n        });\n      });\n      this.setState({ workWeight, workNumReps, warmUpSets });\n    } else this.setState({ workWeight: -1, workNumReps: -1, warmUpSets: [] });\n  };\n\n  handlePlateGroupsClear = () => {\n    const { unit } = this.state;\n    let availPlates = { ...this.state.availPlates };\n    availPlates[unit] = availPlates[unit].map(({ value, color }) => ({ value, quantity: 0, color }));\n    this.setState({ availPlates });\n  };\n\n  resetPrevLoad = () => {\n    this.setState({ prevCalcdLoad: -1 });\n  };\n}\n\nexport default App;\n","export const calcBgColor = input => {\r\n  if (input % 6 === 0) return 'black';\r\n  if (input % 5 === 0) return 'yellow';\r\n  if (input % 4 === 0) return 'red';\r\n  if (input % 3 === 0) return 'purple';\r\n  if (input % 2 === 0) return 'green';\r\n  return 'cyan';\r\n};\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport App from './App';\nimport './css/index.css';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}