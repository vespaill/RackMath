{"version":3,"sources":["icons/fire.png","components/icons/barbell.jsx","components/icons/plate.jsx","components/icons/info.jsx","components/icons/fire.jsx","components/navBar.jsx","components/invPlateGroup.jsx","components/inventory.jsx","components/common/notFound.jsx","components/loadValue.jsx","components/loadDiagram.jsx","utils/limitPlateHeight.js","components/loaderForm.jsx","components/loader.jsx","components/setsCalcForm.jsx","components/setContainer.jsx","components/setsCalculator.jsx","components/about.jsx","utils/inventory.js","App.js","utils/calcBgColor.js","serviceWorker.js","index.js"],"names":["module","exports","Barbell","className","Icon","Fire","src","fireIcon","alt","NavBar","navLinks","url","component","commonProps","activeClassName","map","index","key","to","InvPlateGroup","props","value","quantity","bgColor","onClick","style","opacity","Inventory","unit","barbell","availPlates","onUnitClick","onPlateGroupClick","onClear","Row","variant","e","minWidth","plate","color","plateGroupProps","Col","xs","NotFound","LoadValue","prevCalcdLoad","calcdLoad","id1","shortid","generate","id2","LoadDiagram","barbellWeight","calcdPlates","loadValProps","left","height","min_px","max_px","LoaderForm","Form","onSubmit","InputGroup","FormControl","type","name","placeholder","aria-label","min","step","onFocus","currentTarget","select","Append","Text","Button","btnText","Loader","prevProps","this","location","resetPrevLoad","formProps","diagramProps","Component","withRouter","SetsCalcForm","defaultValue","SetContainer","percentage","weight","numReps","isWorkingSet","workSetClass","Math","round","SetsCalculator","workingWeight","workingNumReps","warmUpSets","contProps","onLoad","workingWeightContProps","href","target","display","set","additionalProps","About","textAlign","modQuantity","plateObjs","modifier","reduce","prev","cur","floor","expandFromQuantity","array","j","push","roundToNearestStep","remainder","quotient","calcWarmUpReps","workingNumSets","App","state","lbs","kg","percentages","handleUnitClick","setState","classList","add","remove","handlePlateGroupClick","cpy","i","findIndex","element","handleLoadSubmit","preventDefault","firstElementChild","blur","handleLoad","loadInput","load","halfQuantity","availPlatesOneSide","validateLoad","valid","errMsg","calculatePlates","success","warn","roundOff","toast","up","amount","error","acc","targetLoad","workingLoad","abs","justbar","length","handleWorkSetSubmit","querySelectorAll","forEach","elem","numRepsInput","handlePlateGroupsClear","input","loaderProps","invProps","warmUpProps","paddingBottom","limit","autoClose","hideProgressBar","pauseOnFocusLoss","draggable","pauseOnHover","path","render","from","exact","Boolean","window","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.936c7110.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/fire.fe489d1d.png\";","import React from 'react';\r\nimport '../../css/icons/barbell.css';\r\n\r\nconst Barbell = () => {\r\n  return (\r\n    <div className=\"barbell-icon\">\r\n      <div className=\"barbell\">\r\n        <div className=\"barbell__shaft\"></div>\r\n        <div className=\"plate-group--1\">\r\n          <div className=\"plate-group__plate--small\"></div>\r\n          <div className=\"plate-group__plate--med\"></div>\r\n          <div className=\"plate-group__plate--large\"></div>\r\n        </div>\r\n        <div className=\"plate-group--2\">\r\n          <div className=\"plate-group__plate--small\"></div>\r\n          <div className=\"plate-group__plate--med\"></div>\r\n          <div className=\"plate-group__plate--large\"></div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Barbell;\r\n","import React from 'react';\r\nimport '../../css/icons/plate.css';\r\n\r\nconst Barbell = () => {\r\n  return (\r\n    <div className=\"plate-icon\">\r\n      <div className=\"plate__outline\"></div>\r\n      <div className=\"plate__circle\"></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Barbell;\r\n","import React from 'react';\r\nimport '../../css/icons/info.css';\r\n\r\nconst Icon = () => (\r\n  <div className=\"info-icon\">\r\n    <div>i</div>\r\n  </div>\r\n);\r\n\r\nexport default Icon;\r\n","import React from 'react';\r\nimport fireIcon from '../../icons/fire.png'\r\nimport '../../css/icons/fire.css'\r\n\r\nconst Fire = () => {\r\n  return <img className=\"fire-icon\" src={fireIcon} alt=\"fire\" />;\r\n};\r\n\r\nexport default Fire;\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport '../css/navBar.css';\r\nimport Barbell from './icons/barbell';\r\nimport Plate from './icons/plate';\r\nimport Info from './icons/info';\r\nimport Fire from './icons/fire';\r\n\r\nconst NavBar = () => {\r\n  const navLinks = [\r\n    { url: 'home', component: <Barbell /> },\r\n    { url: 'warmup', component: <Fire /> },\r\n    { url: 'inventory', component: <Plate /> },\r\n    { url: 'about', component: <Info /> }\r\n  ];\r\n  const commonProps = { className: 'nav-item', activeClassName: 'active-class'};\r\n  return (\r\n    <nav className=\"bg-red navbar fixed-bottom d-flex justify-content-between\">\r\n      {navLinks.map(({ url, component }, index) => (\r\n        <NavLink key={index} {...commonProps} to={`/${url}`}>\r\n          {component}\r\n        </NavLink>\r\n      ))}\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","import React from 'react';\r\n\r\nconst InvPlateGroup = props => {\r\n  const { value, quantity, bgColor, onClick } = props;\r\n\r\n  return (\r\n    <div className=\"plate-group text-center\">\r\n      <button onClick={() => onClick(value)} className={'plate-group__plate' + (quantity ? ' bg-' + bgColor : '')}>\r\n        <span className=\"center-vertically\">{value}</span>\r\n      </button>\r\n      <div className=\"plate-group__quantity\" style={{ opacity: quantity > 0 ? '100%' : '0' }}>\r\n        <span className=\"center-vertically unselectable\">{quantity}</span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InvPlateGroup;\r\n","import React from 'react';\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport InvPlateGroup from './invPlateGroup';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport '../css/inventory.css';\r\n\r\nconst Inventory = props => {\r\n  const { unit, barbell, availPlates, onUnitClick, onPlateGroupClick, onClear } = props;\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container\">\r\n        <Row className=\"d-flex justify-content-between\">\r\n          <h1>Unit</h1>\r\n          <button className=\"btn-unit\" variant=\"danger\" onClick={e => onUnitClick(e)}>\r\n            {unit}\r\n          </button>\r\n        </Row>\r\n        <Row className=\"d-flex justify-content-between\">\r\n          <h1>Barbell</h1>\r\n          <h1>{barbell[unit]}</h1>\r\n        </Row>\r\n        <Row className=\"d-flex justify-content-center\">\r\n          <h1>Available plates</h1>\r\n        </Row>\r\n      </div>\r\n      <Row style={{ minWidth: '300px' }}>\r\n        {availPlates[unit].map((plate, index) => {\r\n          const { value, color, quantity } = plate;\r\n          const plateGroupProps = { onClick: onPlateGroupClick, value, quantity, bgColor: color };\r\n          return (\r\n            <Col key={index} xs={4}>\r\n              <InvPlateGroup {...plateGroupProps} />\r\n            </Col>\r\n          );\r\n        })}\r\n        <Col xs={4}>\r\n          <div className=\"btn-clear-container text-center\">\r\n            <button className=\"btn-clear\" onClick={() => onClear()}>\r\n              <span className=\"center-vertically\">clear</span>\r\n            </button>\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Inventory;\r\n","import React from 'react';\r\n\r\nconst NotFound = () => {\r\n  return <h1>Not Found</h1>;\r\n};\r\n\r\nexport default NotFound;\r\n","import React from 'react';\r\nimport '../css/loadValue.css';\r\nimport shortid from 'shortid';\r\n\r\nconst LoadValue = props => {\r\n  const { prevCalcdLoad, calcdLoad, unit } = props;\r\n\r\n  const id1 = shortid.generate();\r\n  const id2 = shortid.generate();\r\n\r\n  return (\r\n    <div className=\"load-value center-vertically\">\r\n      {prevCalcdLoad > -1 && (\r\n        <div key={id1} className=\"load-value__prev badge badge-success animate-leave\">\r\n          {`${prevCalcdLoad} ${unit}`}\r\n        </div>\r\n      )}\r\n      {calcdLoad > -1 && (\r\n        <div key={id2} className=\"load-value__cur badge badge-success animate-enter\">\r\n          {`${calcdLoad} ${unit}`}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoadValue;\r\n","import React from 'react';\r\nimport { limitPlateHeight } from '../utils/limitPlateHeight';\r\nimport '../css/loadDiagram.css';\r\nimport LoadValue from './loadValue';\r\n\r\nconst LoadDiagram = props => {\r\n  const { unit, barbellWeight, calcdPlates, calcdLoad, prevCalcdLoad } = props;\r\n  const loadValProps = { unit, calcdLoad, prevCalcdLoad };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"load\">\r\n        <div className=\"load__barbell--shaft\">\r\n          <div>{barbellWeight}</div>\r\n        </div>\r\n        <div className=\"load__barbell--sleeve-threshold\" />\r\n        <div className=\"load__plate-group\">\r\n          <div style={{ opacity: '0px' }} className=\"plate-container\" />\r\n          {calcdPlates.map((plate, index) => (\r\n            <div key={index} className=\"plate-container\" style={{ left: `${index * 32 + 32}px` }}>\r\n              <div\r\n                className={`plate-container__plate center-vertically bg-${plate.color}`}\r\n                style={{ height: `${limitPlateHeight(plate.value * 7, 45, 315)}px` }}\r\n              />\r\n              <div className=\"plate-container__plate--text center-vertically\">{plate.value}</div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n      <LoadValue {...loadValProps} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LoadDiagram;\r\n","export const limitPlateHeight = (height, min_px, max_px) => {\r\n  if (height >= max_px) return max_px;\r\n  if (height <= min_px) return min_px;\r\n  return height;\r\n};","import React from 'react';\r\nimport { Form, InputGroup, FormControl, Button } from 'react-bootstrap';\r\nimport '../css/loadForm.css';\r\n\r\nconst LoaderForm = props => {\r\n  return (\r\n    <Form onSubmit={e => props.onSubmit(e)}>\r\n      <InputGroup>\r\n        <FormControl\r\n          className=\"weight-input__form\"\r\n          type=\"number\"\r\n          name=\"loadInput\"\r\n          placeholder={props.placeholder}\r\n          aria-label=\"weight\"\r\n          min=\"0\"\r\n          step=\"0.5\"\r\n          onFocus={e => { e.currentTarget.select(); }}\r\n        />\r\n        <InputGroup.Append>\r\n          <InputGroup.Text className=\"weight-input__text\">\r\n            {props.unit}\r\n          </InputGroup.Text>\r\n        </InputGroup.Append>\r\n      </InputGroup>\r\n      <Button className=\"mx-auto d-block\" variant=\"dark\" type=\"submit\">\r\n        {props.btnText}\r\n      </Button>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default LoaderForm;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withRouter } from 'react-router';\r\nimport LoadDiagram from './loadDiagram';\r\nimport LoaderForm from './loaderForm';\r\n\r\nclass Loader extends Component {\r\n  // componentDidMount() {\r\n  //   this.props.onMount();\r\n  // }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props.location !== prevProps.location) this.props.resetPrevLoad();\r\n  }\r\n\r\n  static propTypes = {\r\n    location: PropTypes.object.isRequired\r\n  };\r\n\r\n  render() {\r\n    const { unit, barbellWeight, calcdPlates, calcdLoad, prevCalcdLoad, onSubmit } = this.props;\r\n    const formProps = { unit, onSubmit };\r\n    const diagramProps = { unit, barbellWeight, calcdPlates, calcdLoad, prevCalcdLoad };\r\n\r\n    return (\r\n      <>\r\n        <div className=\"d-flex justify-content-center row\">\r\n          <h1>Barbell Loader</h1>\r\n        </div>\r\n        <LoaderForm {...formProps} placeholder=\"Enter Weight\" btnText=\"Load\" />\r\n        <LoadDiagram {...diagramProps} />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(Loader);\r\n","import React from 'react';\r\nimport { Form, InputGroup, FormControl, Button } from 'react-bootstrap';\r\nimport '../css/loadForm.css';\r\n\r\nconst SetsCalcForm = props => {\r\n  return (\r\n    <Form className=\"warmUpSetsForm\" onSubmit={e => props.onSubmit(e)}>\r\n      <InputGroup>\r\n        <FormControl\r\n          className=\"weight-input__form\"\r\n          type=\"number\"\r\n          name=\"loadInput\"\r\n          placeholder=\"weight\"\r\n          aria-label=\"weight\"\r\n          min=\"0\"\r\n          step=\"0.5\"\r\n          onFocus={e => { e.currentTarget.select(); }}\r\n        />\r\n        <InputGroup.Append>\r\n          <InputGroup.Text className=\"weight-input__text\">{props.unit} × </InputGroup.Text>\r\n        </InputGroup.Append>\r\n        <FormControl\r\n          className=\"weight-input__form\"\r\n          type=\"number\"\r\n          name=\"numRepsInput\"\r\n          placeholder=\"reps\"\r\n          aria-label=\"weight\"\r\n          min=\"0\"\r\n          step=\"1\"\r\n          defaultValue=\"5\"\r\n          onFocus={e => { e.currentTarget.select(); }}\r\n        />\r\n        <InputGroup.Append>\r\n          <InputGroup.Text className=\"weight-input__text\"></InputGroup.Text>\r\n        </InputGroup.Append>\r\n      </InputGroup>\r\n      <Button className=\"mx-auto d-block\" variant=\"dark\" type=\"submit\">{props.btnText}</Button>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default SetsCalcForm;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Button } from 'react-bootstrap';\r\nimport '../css/setContainer.css';\r\n\r\nconst SetContainer = props => {\r\n  const { unit, percentage, weight, numReps, isWorkingSet, btnText } = props;\r\n  const workSetClass = isWorkingSet ? ' working-weight' : '';\r\n\r\n  return (\r\n    <div className={'set-container d-flex justify-content-between' + workSetClass}>\r\n      <div className=\"percent-container\">\r\n        <span className=\"percentage badge badge-warning\">{Math.round(percentage * 100)}%</span>\r\n      </div>\r\n      <span className=\"set\">{`${weight} ${unit} × ${numReps}`}</span>\r\n      <Link to=\"/home\">\r\n        <Button className=\"btn btn-dark\" onClick={() => props.onClick(weight)}>\r\n          {btnText}\r\n        </Button>\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SetContainer;\r\n","import React from 'react';\r\nimport SetsCalcForm from './setsCalcForm';\r\nimport SetContainer from './setContainer';\r\nimport '../css/setsCalculator.css';\r\n// import Cog from './icons/cog';\r\n\r\nconst SetsCalculator = props => {\r\n  const { workingWeight, workingNumReps, warmUpSets, unit, onSubmit, onLoad } = props;\r\n  const contProps = { unit, onClick: onLoad };\r\n  const workingWeightContProps = {\r\n    percentage: 1,\r\n    weight: workingWeight,\r\n    numReps: workingNumReps,\r\n    isWorkingSet: true,\r\n    btnText: 'Start'\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"text-center\">\r\n        <a href=\"https://www.t-nation.com/training/most-intelligent-way-to-warm-up\" target=\"#blank\">\r\n          <h1>Warm Up Sets Calculator</h1>\r\n        </a>\r\n        {/* <button className=\"text-center btn btn-dark\" style={{ padding: '5px', width: '38px', height: '38px' }}>\r\n          <Cog />\r\n        </button> */}\r\n      </div>\r\n      <SetsCalcForm style={{ display: 'inline' }} unit={unit} onSubmit={onSubmit} btnText=\"Calculate\" />\r\n      <div className=\"setList-container\">\r\n        <div className=\"setList mx-auto\">\r\n          {warmUpSets.map((set, index) => {\r\n            const { percentage, weight, numReps } = set;\r\n            const additionalProps = { percentage, weight, numReps };\r\n            return <SetContainer key={index} btnText=\"Load\" {...contProps} {...additionalProps} />;\r\n          })}\r\n          {workingWeight !== -1 && <SetContainer {...contProps} {...workingWeightContProps} />}\r\n        </div>\r\n      </div>\r\n      {/* <div className=\"popup\" id=\"popup\"></div> */}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SetsCalculator;\r\n","import React from 'react';\r\n\r\nconst About = () => {\r\n  return (\r\n    <div\r\n      className=\"center-vertically\"\r\n      style={{\r\n        textAlign: 'justify'\r\n      }}\r\n    >\r\n      Barbell Loader was inspired by{' '}\r\n      <a target=\"#blank\" href=\"https://www.happyliftingco.com/pages/rackmath\">RackMath</a> and\r\n      built from scratch by Victor Espaillat with the help of React.js and\r\n      Bootstrap.\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default About;\r\n","const modQuantity = (plateObjs, modifier) => {\r\n  return plateObjs.reduce((prev, cur) => {\r\n    // Filter out plates with 0 quantity.\r\n    if (cur.quantity > 0) {\r\n      return [\r\n        ...prev,\r\n        {\r\n          value: cur.value,\r\n          color: cur.color,\r\n          // Half quantity because we want to work with one side of barbell.\r\n          quantity: Math.floor(cur.quantity * modifier)\r\n        }\r\n      ];\r\n    }\r\n    return prev;\r\n  }, []);\r\n};\r\n\r\nconst expandFromQuantity = plateObjs => {\r\n  const array = [];\r\n  for (let plate of plateObjs) {\r\n    let j = Math.floor(plate.quantity);\r\n    while (j > 0) {\r\n      array.push({ value: plate.value, color: plate.color });\r\n      j--;\r\n    }\r\n  }\r\n  return array;\r\n};\r\n\r\nexport { modQuantity, expandFromQuantity };\r\n","import React, { Component } from 'react';\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport { ToastContainer, toast } from 'react-toastify';\nimport NavBar from './components/navBar';\nimport Inventory from './components/inventory';\nimport NotFound from './components/common/notFound';\nimport Loader from './components/loader';\nimport SetsCalculator from './components/setsCalculator';\nimport About from './components/about';\nimport { modQuantity, expandFromQuantity } from './utils/inventory';\nimport { calcBgColor } from './utils/calcBgColor';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'react-toastify/dist/ReactToastify.css';\nimport './css/App.css';\nimport './css/utils.css';\nimport './css/toastify.css';\n\nconst MAX_PLATES = 8;\n\nconst roundToNearestStep = (value, step) => {\n  const remainder = value % step;\n  const quotient = value - remainder;\n  return remainder >= step / 2 ? quotient + step : quotient;\n};\n\nconst calcWarmUpReps = (percentage, workingNumSets) => {\n  const numReps = Math.round(workingNumSets * (2 - 4 * (percentage - 0.5)));\n  return numReps > 0 ? numReps : 1;\n};\n\nclass App extends Component {\n  state = {\n    // Inventory related\n    unit: 'lbs',\n    barbell: {\n      lbs: 45,\n      kg: 20\n    },\n    availPlates: {\n      lbs: [\n        { value: 100, quantity: 0 },\n        { value: 65, quantity: 0 },\n        { value: 55, quantity: 0 },\n        { value: 50, quantity: 0 },\n        { value: 45, quantity: MAX_PLATES },\n        { value: 35, quantity: 0 },\n        { value: 30, quantity: 0 },\n        { value: 25, quantity: MAX_PLATES },\n        { value: 20, quantity: 0 },\n        { value: 15, quantity: 0 },\n        { value: 12.5, quantity: 0 },\n        { value: 10, quantity: MAX_PLATES },\n        { value: 7.5, quantity: 0 },\n        { value: 5, quantity: MAX_PLATES },\n        { value: 2.5, quantity: MAX_PLATES },\n        { value: 1.25, quantity: 0 },\n        { value: 1, quantity: 0 },\n        { value: 0.75, quantity: 0 },\n        { value: 0.5, quantity: 0 },\n        { value: 0.25, quantity: 0 }\n      ],\n      kg: [\n        { value: 50, quantity: 0 },\n        { value: 45, quantity: 0 },\n        { value: 35, quantity: 0 },\n        { value: 30, quantity: 0 },\n        { value: 25, quantity: 0 },\n        { value: 20, quantity: MAX_PLATES },\n        { value: 15, quantity: 0 },\n        { value: 12.5, quantity: 0 },\n        { value: 10, quantity: MAX_PLATES },\n        { value: 7.5, quantity: 0 },\n        { value: 5, quantity: MAX_PLATES },\n        { value: 3, quantity: 0 },\n        { value: 2.5, quantity: MAX_PLATES },\n        { value: 2, quantity: 0 },\n        { value: 1.5, quantity: 0 },\n        { value: 1.25, quantity: MAX_PLATES },\n        { value: 1, quantity: 0 },\n        { value: 0.75, quantity: 0 },\n        { value: 0.5, quantity: 0 },\n        { value: 0.25, quantity: 0 }\n      ]\n    },\n    calcdPlates: [],\n    calcdLoad: -1,\n    prevCalcdLoad: -1,\n\n    // Warm Up related\n    percentages: [0.5, 0.6, 0.7, 0.8, 0.9, 1.1],\n    workingWeight: -1,\n    workingNumReps: -1,\n    warmUpSets: [\n      /* {percentage, weight, numReps}, ... */\n    ]\n  };\n\n  componentDidMount() {\n    let availPlates = {};\n\n    ['lbs', 'kg'].forEach(unit => {\n      availPlates[unit] = this.state.availPlates[unit].map((plate, index) => ({\n        ...plate,\n        color: calcBgColor(index)\n      }));\n    });\n\n    this.setState({ availPlates });\n  }\n\n  render() {\n    const { unit, barbell, availPlates, calcdPlates, calcdLoad } = this.state;\n    const { prevCalcdLoad, workingWeight, workingNumReps, warmUpSets } = this.state;\n    const loaderProps = {\n      unit,\n      barbellWeight: barbell[unit],\n      calcdPlates,\n      calcdLoad,\n      prevCalcdLoad,\n      onSubmit: this.handleLoadSubmit,\n      resetPrevLoad: this.resetPrevLoad\n    };\n    const invProps = {\n      unit,\n      barbell,\n      availPlates,\n      onPlateGroupClick: this.handlePlateGroupClick,\n      onUnitClick: this.handleUnitClick,\n      onClear: this.handlePlateGroupsClear\n    };\n    const warmUpProps = {\n      unit,\n      workingWeight,\n      workingNumReps,\n      warmUpSets,\n      onSubmit: this.handleWorkSetSubmit,\n      onLoad: this.handleLoad\n    };\n\n    return (\n      <>\n        <div className=\"container\" style={{ paddingBottom: '70px' }}>\n          <ToastContainer\n            limit={1}\n            autoClose={2000}\n            hideProgressBar\n            pauseOnFocusLoss={false}\n            draggable={false}\n            pauseOnHover={false}\n          />\n          <Switch>\n            <Route path=\"/home\" render={() => <Loader {...loaderProps} />} />\n            <Route path=\"/inventory\" render={() => <Inventory {...invProps} />} />\n            <Route path=\"/warmup\" render={() => <SetsCalculator {...warmUpProps} />} />\n            <Route path=\"/about\" component={About}></Route>\n            <Route path=\"/not-found\" component={NotFound} />\n            <Redirect from=\"/\" exact to=\"/home\" />\n            <Redirect to=\"/not-found\" />\n          </Switch>\n        </div>\n        <NavBar />\n      </>\n    );\n  }\n\n  handleUnitClick = e => {\n    let { unit } = this.state;\n    if (unit === 'lbs') unit = 'kg';\n    else unit = 'lbs';\n\n    this.setState({\n      unit,\n      calcdPlates: [], // reset calculated plates\n      calcdLoad: -1,\n      prevCalcdLoad: -1,\n      workingWeight: -1, // reset working weight\n      warmUpSets: [] // reset working weight\n    });\n\n    e.currentTarget.classList.add('animate-wiggle');\n    e.currentTarget.classList.remove('animate-wiggle');\n  };\n\n  handlePlateGroupClick = value => {\n    const { unit } = this.state;\n    const cpy = { ...this.state.availPlates };\n    const i = cpy[unit].findIndex(element => element.value === value);\n    cpy[unit][i].quantity = (cpy[unit][i].quantity + 2) % (MAX_PLATES + 2);\n    this.setState({ availPlates: cpy });\n  };\n\n  handleLoadSubmit = e => {\n    e.preventDefault();\n    // Blur in order to hide keyboard on mobile.\n    e.currentTarget.firstElementChild.firstElementChild.blur();\n    // console.log(e.currentTarget.firstElementChild.firstElementChild);\n    this.handleLoad(e.currentTarget.loadInput.value);\n    // e.currentTarget.loadInput.value = '';\n  };\n\n  handleLoad = load => {\n    const { unit, availPlates } = this.state;\n    const barbellWeight = this.state.barbell[unit];\n    const halfQuantity = modQuantity(availPlates[unit], 0.5);\n    const availPlatesOneSide = expandFromQuantity(halfQuantity);\n    const { valid, errMsg } = this.validateLoad(load, barbellWeight, availPlatesOneSide);\n    const prevCalcdLoad = this.state.calcdLoad;\n\n    if (!valid) {\n      this.setState({ calcdPlates: [], calcdLoad: -1, prevCalcdLoad });\n      toast.error(errMsg);\n    } else {\n      const { success, warn, calcdPlates, roundOff } = this.calculatePlates(load, barbellWeight, availPlatesOneSide);\n\n      if (warn === 'justbar') toast.success('Just the bar!');\n      else if (warn === 'roundoff') toast.warn(`Rounded ${roundOff.up ? 'up' : 'down'} ${roundOff.amount} ${unit}`);\n      else if (warn === 'notEnoughRoom') toast.error('Not enough room on the bar!');\n\n      if (success) {\n        const calcdLoad = calcdPlates.reduce((acc, cur) => acc + cur.value, 0) * 2 + barbellWeight;\n        this.setState({ calcdPlates, calcdLoad, prevCalcdLoad });\n      } else this.setState({ calcdPlates: [], calcdLoad: -1, prevCalcdLoad });\n    }\n  };\n\n  validateLoad = (load, barbell, availPlatesOneSide) => {\n    if (load < barbell)\n      return {\n        valid: false,\n        errMsg: \"That's not even the bar!\"\n      };\n\n    const totalWeightAvail = barbell + 2 * availPlatesOneSide.reduce((acc, cur) => acc + cur.value, 0);\n\n    if (load > totalWeightAvail)\n      return {\n        valid: false,\n        errMsg: \"Your inventory doesn't work with that weight\"\n      };\n\n    return { valid: true };\n  };\n\n  /**\n   * Returns an array containing the plates objects that must loaded on one side\n   * of a barbell in order to meet a target load. If not possible, the success\n   * flag will be false.\n   * @param {Number} targetLoad - Weight to load onto barbell.\n   * @param {Number} barbellWeight - Weight of the barbell.\n   * @param {Object[]} availPlatesOneSide - Available plate objects for one side of bar.\n   * @param {Number} plateObjs[].value - The plate's weight.\n   * @param {String} plateObjs[].color - The plate's color.\n   */\n  calculatePlates = (targetLoad, barbellWeight, availPlatesOneSide) => {\n    const step = availPlatesOneSide.reduce((prev, cur) => (prev < cur ? prev : cur)).value * 2;\n    let workingLoad = roundToNearestStep(targetLoad, step);\n    const roundOff = { amount: Math.abs(workingLoad - targetLoad), up: workingLoad > targetLoad };\n\n    let success = true;\n    let warn = '';\n    let calcdPlates = [];\n\n    workingLoad -= barbellWeight;\n    const justbar = workingLoad === 0;\n\n    if (justbar) warn = 'justbar';\n    if (roundOff.amount > 0) warn = 'roundoff';\n\n    if (!justbar) {\n      // Work with one side of the barbell. Presumably, both sides are identical.\n      workingLoad /= 2;\n      for (let plate of availPlatesOneSide) {\n        if (workingLoad >= plate.value) {\n          calcdPlates.push(plate);\n          if (calcdPlates.length > MAX_PLATES) {\n            success = false;\n            warn = 'notEnoughRoom';\n            break;\n          }\n          workingLoad -= plate.value;\n        }\n      }\n    }\n    return { success, warn, calcdPlates, roundOff };\n  };\n\n  handleWorkSetSubmit = e => {\n    e.preventDefault();\n    e.currentTarget.firstElementChild.querySelectorAll('input').forEach(elem => {\n      elem.blur();\n    });\n    const { value: workingWeight } = e.currentTarget.loadInput;\n    const { value: workingNumReps } = e.currentTarget.numRepsInput;\n\n    if (workingWeight && workingNumReps) {\n      const warmUpSets = [];\n      const { percentages } = this.state;\n      percentages.forEach(percentage => {\n        warmUpSets.push({\n          percentage,\n          weight: roundToNearestStep(workingWeight * percentage, 5),\n          numReps: calcWarmUpReps(percentage, workingNumReps)\n        });\n      });\n      this.setState({ workingWeight, workingNumReps, warmUpSets });\n    } else this.setState({ workingWeight: -1, workingNumReps: -1, warmUpSets: [] });\n  };\n\n  handlePlateGroupsClear = () => {\n    const { unit } = this.state;\n    let availPlates = { ...this.state.availPlates };\n    availPlates[unit] = availPlates[unit].map(({ value, color }) => ({ value, quantity: 0, color }));\n    this.setState({ availPlates });\n  };\n\n  resetPrevLoad = () => {\n    this.setState({ prevCalcdLoad: -1 });\n  };\n}\n\nexport default App;\n","export const calcBgColor = input => {\r\n  if (input % 6 === 0) return 'black';\r\n  if (input % 5 === 0) return 'yellow';\r\n  if (input % 4 === 0) return 'red';\r\n  if (input % 3 === 0) return 'purple';\r\n  if (input % 2 === 0) return 'green';\r\n  return 'cyan';\r\n};\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './App';\nimport './css/index.css';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}