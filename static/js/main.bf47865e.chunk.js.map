{"version":3,"sources":["fire.png","components/icons/barbell.jsx","components/icons/plate.jsx","components/icons/info.jsx","components/icons/fire.jsx","components/navBarBottom.jsx","components/invPlateGroup.jsx","components/inventory.jsx","components/common/notFound.jsx","components/loadDiagram.jsx","utils/limitPlateHeight.js","components/loadForm.jsx","components/loadPlateCalc.jsx","components/setContainer.jsx","components/warmUpSetCalc.jsx","components/about.jsx","utils/inventory.js","App.js","utils/calcBgColor.js","serviceWorker.js","index.js"],"names":["module","exports","Barbell","className","Icon","Fire","style","height","src","fire","NavBarBottom","activeClassName","to","InvPlateGroup","props","value","quantity","bgColor","onClick","opacity","Inventory","data","unit","barbell","availablePlates","onUnitClick","onPlateGroupClick","Row","variant","minWidth","map","plate","index","color","Col","key","xs","NotFound","LoadDiagram","calculatedPlates","left","min_px","max_px","LoadForm","Form","onSubmit","e","InputGroup","FormControl","type","name","placeholder","aria-label","min","step","onFocus","currentTarget","Append","Text","Button","btnText","LoadPlateCalc","SetContainer","percentage","load","WarmUpSetCalc","workingWeight","sets","onLoad","pair","About","textAlign","target","href","modQuantity","plateObjs","modifier","reduce","prev","cur","Math","floor","expandFromQuantity","array","j","push","roundToNearestFive","remainder","App","state","inventory","lbs","kg","warmUp","handleUnitClick","setState","handlePlateGroupClick","cpy","i","findIndex","element","handleLoadSubmit","preventDefault","firstElementChild","blur","handleLoad","loadInput","halfQuantity","validateLoad","valid","errMsg","calculatePlates","success","warn","msg","severity","calcdPlateObjs","toast","error","prv","targetLoad","workingLoad","length","handleWorkingWeightSubmit","percent","forEach","input","this","paddingBottom","limit","autoClose","hideProgressBar","pauseOnFocusLoss","draggable","pauseOnHover","path","render","component","from","exact","Component","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.bf47865e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/fire.fe489d1d.png\";","import React from 'react';\r\nimport '../../css/icons/barbell.css';\r\n\r\nconst Barbell = () => {\r\n  return (\r\n    <div className=\"barbell-icon\">\r\n      <div className=\"barbell\">\r\n        <div className=\"barbell__shaft\"></div>\r\n        <div className=\"plate-group--1\">\r\n          <div className=\"plate-group__plate--small\"></div>\r\n          <div className=\"plate-group__plate--med\"></div>\r\n          <div className=\"plate-group__plate--large\"></div>\r\n        </div>\r\n        <div className=\"plate-group--2\">\r\n          <div className=\"plate-group__plate--small\"></div>\r\n          <div className=\"plate-group__plate--med\"></div>\r\n          <div className=\"plate-group__plate--large\"></div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Barbell;\r\n","import React from 'react';\r\nimport '../../css/icons/plate.css';\r\n\r\nconst Barbell = () => {\r\n  return (\r\n    <div className=\"plate\">\r\n      <div className=\"plate__outline\"></div>\r\n      <div className=\"plate__circle\"></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Barbell;\r\n","import React from 'react';\r\nimport '../../css/icons/info.css';\r\nconst Icon = () => (\r\n  <div className=\"info-icon\">\r\n    <div>i</div>\r\n  </div>\r\n);\r\nexport default Icon;\r\n","import React from 'react';\r\nimport fire from '../../fire.png';\r\n\r\nconst Fire = () => {\r\n  return <img style={{height: \"40px\"}} src={fire} />;\r\n};\r\n\r\nexport default Fire;\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport '../css/navBarBottom.css';\r\nimport Barbell from './icons/barbell';\r\nimport Plate from './icons/plate';\r\nimport Info from './icons/info';\r\nimport Fire from './icons/fire';\r\n\r\nconst NavBarBottom = () => {\r\n  return (\r\n    <nav className=\"bg-red fixed-bottom navbar navbar-dark\">\r\n      <div className=\"navbar-nav navbar-expand\">\r\n        <NavLink className=\"nav-item\" activeClassName=\"active-class\" to=\"/home\">\r\n          <Barbell />\r\n        </NavLink>\r\n        <NavLink\r\n          className=\"nav-item\"\r\n          activeClassName=\"active-class\"\r\n          to=\"/warmup\"\r\n        >\r\n          <Fire />\r\n        </NavLink>\r\n        <NavLink\r\n          className=\"nav-item\"\r\n          activeClassName=\"active-class\"\r\n          to=\"/inventory\"\r\n        >\r\n          <Plate />\r\n        </NavLink>\r\n        <NavLink\r\n          className=\"nav-item\"\r\n          activeClassName=\"active-class\"\r\n          to=\"/about\"\r\n        >\r\n          <Info />\r\n        </NavLink>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default NavBarBottom;\r\n","import React from 'react';\r\n\r\nconst InvPlateGroup = props => {\r\n  const { value, quantity, bgColor, onClick } = props;\r\n  // const { onPress, onRelease } = props;\r\n  return (\r\n    <div className=\"plate-group text-center\">\r\n      <button\r\n        onClick={() => onClick(value)}\r\n        // onMouseDown={() => onPress(value)}\r\n        // onMouseUp={() => onRelease(value)}\r\n        className={'plate-group__plate' + (quantity ? ' bg-' + bgColor : '')}\r\n      >\r\n        <span className=\"center-vertically\">{value}</span>\r\n      </button>\r\n      <div\r\n        className=\"plate-group__quantity\"\r\n        style={{ opacity: quantity ? '100%' : '0' }}\r\n      >\r\n        <span className=\"center-vertically unselectable\">{quantity}</span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InvPlateGroup;\r\n","import React from 'react';\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport InvPlateGroup from './invPlateGroup';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport '../css/inventory.css';\r\n\r\nconst Inventory = props => {\r\n  const { unit, barbell, availablePlates } = props.data;\r\n  const { onUnitClick, onPlateGroupClick } = props;\r\n  // const { onPlateGroupPress, onPlateGroupRelease } = props;\r\n  return (\r\n    <>\r\n      <div className=\"container\">\r\n        <Row className=\"d-flex justify-content-between\">\r\n          <h1>Unit</h1>\r\n          <button\r\n            className=\"unit-btn\"\r\n            variant=\"danger\"\r\n            onClick={() => onUnitClick()}\r\n          >\r\n            {unit}\r\n          </button>\r\n        </Row>\r\n        <Row className=\"d-flex justify-content-between\">\r\n          <h1>Barbell</h1>\r\n          <h1>{barbell[unit]}</h1>\r\n        </Row>\r\n        <Row className=\"d-flex justify-content-center\">\r\n          <h1>Available plates</h1>\r\n        </Row>\r\n      </div>\r\n      <Row style={{ minWidth: '300px' }}>\r\n        {availablePlates[unit].map((plate, index) => {\r\n          const { value, color, quantity } = plate;\r\n          return (\r\n            <Col key={index} xs={4}>\r\n              <InvPlateGroup\r\n                onClick={onPlateGroupClick}\r\n                // onPress={onPlateGroupPress}\r\n                // onRelease={onPlateGroupRelease}\r\n                value={value}\r\n                quantity={quantity}\r\n                bgColor={color}\r\n              />\r\n            </Col>\r\n          );\r\n        })}\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Inventory;\r\n","import React from 'react';\r\n\r\nconst NotFound = () => {\r\n  return <h1>Not Found</h1>;\r\n};\r\n\r\nexport default NotFound;\r\n","import React from 'react';\r\nimport { limitPlateHeight } from '../utils/limitPlateHeight';\r\nimport '../css/loadDiagram.css';\r\n\r\nconst LoadDiagram = props => {\r\n  return (\r\n    <div className=\"load\">\r\n      <div className=\"load__barbell--shaft\">\r\n        <div>{props.barbell}</div>\r\n      </div>\r\n      <div className=\"load__barbell--sleeve-threshold\"></div>\r\n\r\n      <div className=\"load__plate-group \">\r\n        <div style={{ opacity: '0px' }} className=\"plate-container\"></div>\r\n        {props.calculatedPlates.map((plate, index) => (\r\n          <div\r\n            key={index}\r\n            style={{ left: `${index * 32 + 32}px` }}\r\n            className=\"plate-container\"\r\n          >\r\n            <div\r\n              className={`plate-container__plate center-vertically bg-${plate.color}`}\r\n              style={{\r\n                height: `${limitPlateHeight(plate.value * 8, 35, 315)}px`\r\n              }}\r\n            ></div>\r\n            <div className=\"plate-container__plate--text center-vertically\">\r\n              {plate.value}\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoadDiagram;\r\n","export const limitPlateHeight = (height, min_px, max_px) => {\r\n  if (height >= max_px) return max_px;\r\n  if (height <= min_px) return min_px;\r\n  return height;\r\n};","import React from 'react';\r\nimport { Form, InputGroup, FormControl, Button } from 'react-bootstrap';\r\nimport '../css/loadForm.css';\r\n\r\nconst LoadForm = props => {\r\n  return (\r\n    <Form onSubmit={e => props.onSubmit(e)}>\r\n      <InputGroup>\r\n        <FormControl\r\n          className=\"weight-input__form mb-3\"\r\n          type=\"number\"\r\n          name=\"loadInput\"\r\n          placeholder={props.placeholder}\r\n          aria-label=\"weight\"\r\n          min=\"0\"\r\n          step=\"0.5\"\r\n          onFocus={e => { e.currentTarget.value = ''; }}\r\n        />\r\n        <InputGroup.Append>\r\n          <InputGroup.Text className=\"weight-input__text\">\r\n            {props.unit}\r\n          </InputGroup.Text>\r\n        </InputGroup.Append>\r\n      </InputGroup>\r\n      <Button className=\"mx-auto d-block\" variant=\"dark\" type=\"submit\">\r\n        {props.btnText}\r\n      </Button>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default LoadForm;\r\n","import React from 'react';\r\nimport LoadDiagram from './loadDiagram';\r\nimport LoadForm from './loadForm';\r\n\r\nconst LoadPlateCalc = props => {\r\n  return (\r\n    <>\r\n      <LoadForm\r\n        unit={props.unit}\r\n        onSubmit={props.onSubmit}\r\n        placeholder=\"Enter Weight\"\r\n        btnText=\"Load\"\r\n      />\r\n      <LoadDiagram\r\n        barbell={props.barbell}\r\n        calculatedPlates={props.calculatedPlates}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LoadPlateCalc;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Button } from 'react-bootstrap';\r\nimport '../css/setContainer.css';\r\n\r\nconst SetContainer = props => {\r\n  const { percentage, load, unit } = props.data;\r\n  return (\r\n    <div className=\"set-container d-flex justify-content-between\">\r\n      <div className=\"percent-container\">\r\n        <span className=\"percentage badge badge-warning\">{percentage*100}%</span>\r\n      </div>\r\n      <span className=\"set\">{`${load} ${unit}`}</span>\r\n      <Link to=\"/home\">\r\n        <Button className=\"btn btn-dark\" onClick={() => props.onClick(load)}>\r\n          Load\r\n        </Button>\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SetContainer;\r\n","import React from 'react';\r\nimport LoadForm from './loadForm';\r\nimport SetContainer from './setContainer';\r\nimport { Row } from 'react-bootstrap';\r\nimport '../css/warmUpSetCalc.css'\r\n\r\nconst WarmUpSetCalc = props => {\r\n  const { workingWeight, sets } = props.data;\r\n  const { unit, onSubmit, onLoad } = props;\r\n  return (\r\n    <>\r\n      <Row className=\"d-flex justify-content-center\">\r\n        <h1>Warm Up Sets Calculator</h1>\r\n      </Row>\r\n      <LoadForm\r\n        unit={unit}\r\n        onSubmit={onSubmit}\r\n        placeholder=\"Working Weight\"\r\n        btnText=\"Calculate\"\r\n      />\r\n      <div className=\"setList-container\">\r\n        <div className=\"setList mx-auto\">\r\n          {sets.map((pair, index) => {\r\n            const [percentage, load] = pair;\r\n            return (\r\n              <SetContainer\r\n                key={index}\r\n                data={{ unit, percentage, load }}\r\n                onClick={onLoad}\r\n              />\r\n            );\r\n          })}\r\n          {workingWeight !== -1 && (\r\n            <SetContainer\r\n              data={{ unit, percentage: 1, load: workingWeight }}\r\n              onClick={onLoad}\r\n            />\r\n          )}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default WarmUpSetCalc;\r\n","import React from 'react';\r\n\r\nconst About = () => {\r\n  return (\r\n    <div\r\n      className=\"center-vertically\"\r\n      style={{\r\n        textAlign: 'justify'\r\n      }}\r\n    >\r\n      Barbell Loader was inspired by{' '}\r\n      <a target=\"#blank\" href=\"https://www.happyliftingco.com/pages/rackmath\">RackMath</a> and\r\n      built from scratch by Victor Espaillat with the help of React.js and\r\n      Bootstrap.\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default About;\r\n","const modQuantity = (plateObjs, modifier) => {\r\n  return plateObjs.reduce((prev, cur) => {\r\n    // Filter out plates with 0 quantity.\r\n    if (cur.quantity > 0) {\r\n      return [\r\n        ...prev,\r\n        {\r\n          value: cur.value,\r\n          color: cur.color,\r\n          // Half quantity because we want to work with one side of barbell.\r\n          quantity: Math.floor(cur.quantity * modifier)\r\n        }\r\n      ];\r\n    }\r\n    return prev;\r\n  }, []);\r\n};\r\n\r\nconst expandFromQuantity = plateObjs => {\r\n  const array = [];\r\n  for (let plate of plateObjs) {\r\n    let j = Math.floor(plate.quantity);\r\n    while (j > 0) {\r\n      array.push({ value: plate.value, color: plate.color });\r\n      j--;\r\n    }\r\n  }\r\n  return array;\r\n};\r\n\r\nexport { modQuantity, expandFromQuantity };\r\n","import React, { Component } from 'react';\nimport { Route, Switch, Redirect, useHistory, history } from 'react-router-dom';\nimport { ToastContainer, toast } from 'react-toastify';\nimport { Container } from 'react-bootstrap';\nimport NavBarBottom from './components/navBarBottom';\nimport Inventory from './components/inventory';\nimport NotFound from './components/common/notFound';\nimport LoadPlateCalc from './components/loadPlateCalc';\nimport WarmUpSetCalc from './components/warmUpSetCalc';\nimport About from './components/about';\nimport { modQuantity, expandFromQuantity } from './utils/inventory';\nimport { calcBgColor } from './utils/calcBgColor';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'react-toastify/dist/ReactToastify.css';\nimport './css/App.css';\nimport './css/utils.css';\nimport './css/toastify.css';\n\nconst MAX_PLATES = 8;\n\nconst roundToNearestFive = value => {\n  const remainder = value % 5;\n  if (remainder >= 2.5) return value - remainder + 5;\n  return value - remainder;\n};\n\nclass App extends Component {\n  state = {\n    inventory: {\n      unit: 'lbs',\n      barbell: {\n        lbs: 45,\n        kg: 20\n      },\n      availablePlates: {\n        lbs: [\n          { value: 100, quantity: 0 },\n          { value: 65, quantity: 0 },\n          { value: 55, quantity: 0 },\n          { value: 50, quantity: 0 },\n          { value: 45, quantity: MAX_PLATES },\n          { value: 35, quantity: 0 },\n          { value: 30, quantity: 0 },\n          { value: 25, quantity: MAX_PLATES },\n          { value: 20, quantity: 0 },\n          { value: 15, quantity: 0 },\n          { value: 12.5, quantity: 0 },\n          { value: 10, quantity: MAX_PLATES },\n          { value: 7.5, quantity: 0 },\n          { value: 5, quantity: MAX_PLATES },\n          { value: 2.5, quantity: MAX_PLATES },\n          { value: 1.25, quantity: 0 },\n          { value: 1, quantity: 0 },\n          { value: 0.75, quantity: 0 },\n          { value: 0.5, quantity: 0 },\n          { value: 0.25, quantity: 0 }\n        ],\n        kg: [\n          { value: 50, quantity: 0 },\n          { value: 45, quantity: 0 },\n          { value: 35, quantity: 0 },\n          { value: 30, quantity: 0 },\n          { value: 25, quantity: 0 },\n          { value: 20, quantity: MAX_PLATES },\n          { value: 15, quantity: 0 },\n          { value: 12.5, quantity: 0 },\n          { value: 10, quantity: MAX_PLATES },\n          { value: 7.5, quantity: 0 },\n          { value: 5, quantity: MAX_PLATES },\n          { value: 3, quantity: 0 },\n          { value: 2.5, quantity: MAX_PLATES },\n          { value: 2, quantity: 0 },\n          { value: 1.5, quantity: 0 },\n          { value: 1.25, quantity: MAX_PLATES },\n          { value: 1, quantity: 0 },\n          { value: 0.75, quantity: 0 },\n          { value: 0.5, quantity: 0 },\n          { value: 0.25, quantity: 0 }\n        ]\n      }\n    },\n    calculatedPlates: [],\n    warmUp: {\n      workingWeight: -1,\n      sets: []\n    }\n  };\n\n  componentDidMount() {\n    let availablePlates = {};\n\n    ['lbs', 'kg'].forEach(unit => {\n      availablePlates[unit] = this.state.inventory.availablePlates[\n        unit\n      ].map((plate, index) => ({ ...plate, color: calcBgColor(index) }));\n    });\n\n    const { inventory } = this.state;\n    inventory.availablePlates = availablePlates;\n    this.setState({ inventory });\n  }\n\n  render() {\n    const { unit, barbell } = this.state.inventory;\n    return (\n      <>\n        <div className='container' style={{ paddingBottom: '70px' }}>\n          <ToastContainer\n            limit={1}\n            autoClose={2000}\n            hideProgressBar\n            pauseOnFocusLoss={false}\n            draggable={false}\n            pauseOnHover={false}\n          />\n          <Switch>\n            <Route\n              path=\"/home\"\n              render={() => (\n                <LoadPlateCalc\n                  unit={unit}\n                  barbell={barbell[unit]}\n                  calculatedPlates={this.state.calculatedPlates}\n                  onSubmit={this.handleLoadSubmit}\n                />\n              )}\n            />\n            <Route\n              path=\"/inventory\"\n              render={() => (\n                <Inventory\n                  data={this.state.inventory}\n                  onPlateGroupClick={this.handlePlateGroupClick}\n                  onUnitClick={this.handleUnitClick}\n                />\n              )}\n            />\n            <Route\n              path=\"/warmup\"\n              render={() => (\n                <WarmUpSetCalc\n                  data={this.state.warmUp}\n                  unit={this.state.inventory.unit}\n                  onSubmit={this.handleWorkingWeightSubmit}\n                  onLoad={this.handleLoad}\n                />\n              )}\n            ></Route>\n            <Route path=\"/about\" component={About}></Route>\n            <Route path=\"/not-found\" component={NotFound} />\n            <Redirect from=\"/\" exact to=\"/home\" />\n            <Redirect to=\"/not-found\" />\n          </Switch>\n        </div>\n        <NavBarBottom />\n      </>\n    );\n  }\n\n  handleUnitClick = () => {\n    let inventory = { ...this.state.inventory };\n    if (inventory.unit === 'lbs') inventory.unit = 'kg';\n    else inventory.unit = 'lbs';\n\n    this.setState({\n      inventory,\n      calculatedPlates: [],\n      warmUp: {\n        workingWeight: -1,\n        sets: []\n      }\n    });\n  };\n\n  handlePlateGroupClick = value => {\n    const { unit } = this.state.inventory;\n    const cpy = { ...this.state.inventory.availablePlates };\n    const i = cpy[unit].findIndex(element => element.value === value);\n    cpy[unit][i].quantity = (cpy[unit][i].quantity + 2) % (MAX_PLATES + 2);\n    this.setState({ availablePlates: cpy });\n  };\n\n  handleLoadSubmit = e => {\n    e.preventDefault();\n    e.currentTarget.firstElementChild.firstElementChild.blur();\n    this.handleLoad(e.currentTarget.loadInput.value);\n  };\n\n  handleLoad = load => {\n    const { unit, availablePlates } = this.state.inventory;\n    const barbell = this.state.inventory.barbell[unit];\n    const halfQuantity = modQuantity(availablePlates[unit], 0.5);\n    const plateObjs = expandFromQuantity(halfQuantity);\n    const { valid, errMsg } = this.validateLoad(load, barbell, plateObjs);\n\n    if (!valid) {\n      this.setState({ calculatedPlates: [] });\n      toast.error(errMsg);\n    } else {\n      const {\n        success,\n        warn: { msg, severity },\n        calcdPlateObjs\n      } = this.calculatePlates(unit, load, barbell, plateObjs);\n\n      if (severity === 'low') toast.success(msg);\n      else if (severity === 'med') toast.warn(msg);\n      else if (severity === 'high') toast.error(msg);\n\n      if (success) this.setState({ calculatedPlates: calcdPlateObjs });\n    }\n  };\n\n  validateLoad = (load, barbell, plateObjs) => {\n    if (load < barbell)\n      return {\n        errMsg: \"That's not even the bar!\",\n        valid: false\n      };\n\n    const totalWeightAvail =\n      barbell + 2 * plateObjs.reduce((prv, cur) => prv + cur.value, 0);\n\n    if (load > totalWeightAvail)\n      return {\n        errMsg: \"Your inventory doesn't work with that weight\",\n        valid: false\n      };\n\n    return { valid: true };\n  };\n\n  /**\n   * Returns an array containing the plates (weights) that must loaded on one\n   * side of a barbell in order to meet a target load.\n   * @param {Number} targetLoad Weight to load onto barbell\n   * @param {Number} barbell Weight of the barbell\n   * @param {Array} plateObjs array of weight value and color pairs.\n   */\n  calculatePlates = (unit, targetLoad, barbell, plateObjs) => {\n    let workingLoad = targetLoad - barbell;\n    if (workingLoad === 0)\n      return {\n        success: true,\n        warn: { msg: 'Just the bar', severity: 'low' },\n        calcdPlateObjs: []\n      };\n\n    /* Showing how to load one side of the barbell. Presumably, both sides are\n       identical. */\n    workingLoad /= 2;\n    let calcdPlateObjs = [];\n\n    for (let plate of plateObjs) {\n      if (workingLoad >= plate.value) {\n        calcdPlateObjs.push(plate);\n        if (calcdPlateObjs.length > MAX_PLATES)\n          return {\n            success: false,\n            warn: { msg: 'Not enough room on the bar!', severity: 'high' }\n          };\n        workingLoad -= plate.value;\n      }\n    }\n\n    if (workingLoad !== 0) {\n      return {\n        success: true,\n        warn: {\n          msg: `${workingLoad * 2} ${unit} has been rounded off.`,\n          severity: 'med'\n        },\n        calcdPlateObjs\n      };\n    }\n    return {\n      success: true,\n      warn: { msg: `${targetLoad} ${unit} loaded!`, severity: 'low' },\n      calcdPlateObjs\n    };\n  };\n\n  handleWorkingWeightSubmit = e => {\n    e.preventDefault();\n    e.currentTarget.firstElementChild.firstElementChild.blur();\n    const { value: workingWeight } = e.currentTarget.loadInput;\n\n    if (workingWeight) {\n      const sets = [];\n      for (let percent of [0.6, 0.7, 0.8, 0.9])\n        sets.push([percent, roundToNearestFive(workingWeight * percent)]);\n\n      this.setState({ warmUp: { workingWeight, sets } });\n    } else {\n      this.setState({ warmUp: { workingWeight: -1, sets: [] } });\n    }\n  };\n}\n\nexport default App;\n","export const calcBgColor = input => {\r\n  if (input % 6 === 0) return 'black';\r\n  if (input % 5 === 0) return 'yellow';\r\n  if (input % 4 === 0) return 'red';\r\n  if (input % 3 === 0) return 'purple';\r\n  if (input % 2 === 0) return 'green';\r\n  return 'cyan';\r\n};\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport App from './App';\nimport './css/index.css';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}