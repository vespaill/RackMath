{"version":3,"sources":["fire.png","components/icons/barbell.jsx","components/icons/plate.jsx","components/icons/info.jsx","components/icons/fire.jsx","components/navBarBottom.jsx","components/invPlateGroup.jsx","components/inventory.jsx","components/common/notFound.jsx","components/loadDiagram.jsx","utils/limitPlateHeight.js","components/loadForm.jsx","components/loadPlateCalc.jsx","components/warmUpSetForm.jsx","components/warmUpSetContainer.jsx","components/warmUpSetCalc.jsx","components/about.jsx","utils/inventory.js","App.js","utils/calcBgColor.js","serviceWorker.js","index.js"],"names":["module","exports","Barbell","className","Icon","Fire","src","fireIcon","alt","NavBarBottom","activeClassName","to","InvPlateGroup","props","value","quantity","bgColor","onClick","style","opacity","Inventory","unit","barbell","availPlates","onUnitClick","onPlateGroupClick","onClear","Row","variant","e","minWidth","map","plate","index","color","plateGroupProps","Col","key","xs","NotFound","LoadDiagram","barbellWeight","calcdPlates","calcdLoad","left","height","min_px","max_px","LoadForm","Form","onSubmit","InputGroup","FormControl","type","name","placeholder","aria-label","min","step","onFocus","currentTarget","select","Append","Text","Button","btnText","LoadPlateCalc","formProps","diagramProps","class","WarmUpSetForm","defaultValue","WarmUpSetContainer","percentage","weight","numReps","isWorkingSet","workSetClass","WarmUpSetCalc","workingWeight","workingNumReps","warmUpSets","contProps","onLoad","workingWeightContProps","set","array","console","log","additionalProps","About","textAlign","target","href","modQuantity","plateObjs","modifier","reduce","prev","cur","Math","floor","expandFromQuantity","j","push","roundToNearestStep","remainder","calcWarmUpReps","workingNumSets","round","App","state","lbs","kg","percentages","handleUnitClick","setState","classList","add","remove","handlePlateGroupClick","cpy","i","findIndex","element","handleLoadSubmit","preventDefault","firstElementChild","blur","handleLoad","loadInput","load","halfQuantity","validateLoad","valid","errMsg","calculatePlates","success","warn","roundedOffAmount","toast","error","acc","targetLoad","workingLoad","length","handleWorkSetSubmit","querySelectorAll","forEach","elem","numRepsInput","handlePlateGroupsClear","input","this","loaderProps","invProps","warmUpProps","paddingBottom","limit","autoClose","hideProgressBar","pauseOnFocusLoss","draggable","pauseOnHover","path","render","component","from","exact","Component","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.1a1fb84a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/fire.fe489d1d.png\";","import React from 'react';\r\nimport '../../css/icons/barbell.css';\r\n\r\nconst Barbell = () => {\r\n  return (\r\n    <div className=\"barbell-icon\">\r\n      <div className=\"barbell\">\r\n        <div className=\"barbell__shaft\"></div>\r\n        <div className=\"plate-group--1\">\r\n          <div className=\"plate-group__plate--small\"></div>\r\n          <div className=\"plate-group__plate--med\"></div>\r\n          <div className=\"plate-group__plate--large\"></div>\r\n        </div>\r\n        <div className=\"plate-group--2\">\r\n          <div className=\"plate-group__plate--small\"></div>\r\n          <div className=\"plate-group__plate--med\"></div>\r\n          <div className=\"plate-group__plate--large\"></div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Barbell;\r\n","import React from 'react';\r\nimport '../../css/icons/plate.css';\r\n\r\nconst Barbell = () => {\r\n  return (\r\n    <div className=\"plate-icon\">\r\n      <div className=\"plate__outline\"></div>\r\n      <div className=\"plate__circle\"></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Barbell;\r\n","import React from 'react';\r\nimport '../../css/icons/info.css';\r\n\r\nconst Icon = () => (\r\n  <div className=\"info-icon\">\r\n    <div>i</div>\r\n  </div>\r\n);\r\n\r\nexport default Icon;\r\n","import React from 'react';\r\nimport fireIcon from '../../fire.png'\r\nimport '../../css/icons/fire.css'\r\n\r\nconst Fire = () => {\r\n  return <img className=\"fire-icon\" src={fireIcon} alt=\"fire\" />;\r\n};\r\n\r\nexport default Fire;\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport '../css/navBarBottom.css';\r\nimport Barbell from './icons/barbell';\r\nimport Plate from './icons/plate';\r\nimport Info from './icons/info';\r\nimport Fire from './icons/fire';\r\n\r\nconst NavBarBottom = () => {\r\n  return (\r\n    <nav className=\"bg-red navbar fixed-bottom d-flex justify-content-between\">\r\n      <NavLink className=\"nav-item\" activeClassName=\"active-class\" to=\"/home\">\r\n        <Barbell />\r\n      </NavLink>\r\n      <NavLink className=\"nav-item\" activeClassName=\"active-class\" to=\"/warmup\">\r\n        <Fire />\r\n      </NavLink>\r\n      <NavLink className=\"nav-item\" activeClassName=\"active-class\" to=\"/inventory\">\r\n        <Plate />\r\n      </NavLink>\r\n      <NavLink className=\"nav-item\" activeClassName=\"active-class\" to=\"/about\">\r\n        <Info />\r\n      </NavLink>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default NavBarBottom;\r\n","import React from 'react';\r\n\r\nconst InvPlateGroup = props => {\r\n  const { value, quantity, bgColor, onClick } = props;\r\n\r\n  return (\r\n    <div className=\"plate-group text-center\">\r\n      <button onClick={() => onClick(value)} className={'plate-group__plate' + (quantity ? ' bg-' + bgColor : '')}>\r\n        <span className=\"center-vertically\">{value}</span>\r\n      </button>\r\n      <div className=\"plate-group__quantity\" style={{ opacity: quantity > 0 ? '100%' : '0' }}>\r\n        <span className=\"center-vertically unselectable\">{quantity}</span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InvPlateGroup;\r\n","import React from 'react';\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport InvPlateGroup from './invPlateGroup';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport '../css/inventory.css';\r\n\r\nconst Inventory = props => {\r\n  const { unit, barbell, availPlates, onUnitClick, onPlateGroupClick, onClear } = props;\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container\">\r\n        <Row className=\"d-flex justify-content-between\">\r\n          <h1>Unit</h1>\r\n          <button className=\"btn-unit\" variant=\"danger\" onClick={e => onUnitClick(e)}>\r\n            {unit}\r\n          </button>\r\n        </Row>\r\n        <Row className=\"d-flex justify-content-between\">\r\n          <h1>Barbell</h1>\r\n          <h1>{barbell[unit]}</h1>\r\n        </Row>\r\n        <Row className=\"d-flex justify-content-center\">\r\n          <h1>Available plates</h1>\r\n        </Row>\r\n      </div>\r\n      <Row style={{ minWidth: '300px' }}>\r\n        {availPlates[unit].map((plate, index) => {\r\n          const { value, color, quantity } = plate;\r\n          const plateGroupProps = { onClick: onPlateGroupClick, value, quantity, bgColor: color };\r\n          return (\r\n            <Col key={index} xs={4}>\r\n              <InvPlateGroup {...plateGroupProps} />\r\n            </Col>\r\n          );\r\n        })}\r\n        <Col xs={4}>\r\n          <div className=\"btn-clear-container text-center\">\r\n            <button className=\"btn-clear\" onClick={() => onClear()}>\r\n              <span className=\"center-vertically\">clear</span>\r\n            </button>\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Inventory;\r\n","import React from 'react';\r\n\r\nconst NotFound = () => {\r\n  return <h1>Not Found</h1>;\r\n};\r\n\r\nexport default NotFound;\r\n","import React from 'react';\r\nimport { limitPlateHeight } from '../utils/limitPlateHeight';\r\nimport '../css/loadDiagram.css';\r\n\r\nconst LoadDiagram = props => {\r\n  const { unit, barbellWeight, calcdPlates, calcdLoad } = props;\r\n\r\n  return (\r\n    <div className=\"load\">\r\n      <div className=\"load__barbell--shaft\">\r\n        <div>{barbellWeight}</div>\r\n      </div>\r\n      <div className=\"load__barbell--sleeve-threshold\" />\r\n      <div className=\"load__plate-group\">\r\n        <div style={{ opacity: '0px' }} className=\"plate-container\" />\r\n        {calcdPlates.map((plate, index) => (\r\n          <div key={index} style={{ left: `${index * 32 + 32}px` }} className=\"plate-container\">\r\n            <div\r\n              className={`plate-container__plate center-vertically bg-${plate.color}`}\r\n              style={{\r\n                height: `${limitPlateHeight(plate.value * 8, 35, 315)}px`\r\n              }}\r\n            />\r\n            <div className=\"plate-container__plate--text center-vertically\">{plate.value}</div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <div\r\n        style={{ opacity: calcdLoad > -1 ? '100%' : '0' }}\r\n        className=\"load-value badge badge-success\">\r\n        {`= ${calcdLoad} ${unit}`}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoadDiagram;\r\n","export const limitPlateHeight = (height, min_px, max_px) => {\r\n  if (height >= max_px) return max_px;\r\n  if (height <= min_px) return min_px;\r\n  return height;\r\n};","import React from 'react';\r\nimport { Form, InputGroup, FormControl, Button } from 'react-bootstrap';\r\nimport '../css/loadForm.css';\r\n\r\nconst LoadForm = props => {\r\n  return (\r\n    <Form onSubmit={e => props.onSubmit(e)}>\r\n      <InputGroup>\r\n        <FormControl\r\n          className=\"weight-input__form\"\r\n          type=\"number\"\r\n          name=\"loadInput\"\r\n          placeholder={props.placeholder}\r\n          aria-label=\"weight\"\r\n          min=\"0\"\r\n          step=\"0.5\"\r\n          onFocus={e => { e.currentTarget.select(); }}\r\n        />\r\n        <InputGroup.Append>\r\n          <InputGroup.Text className=\"weight-input__text\">\r\n            {props.unit}\r\n          </InputGroup.Text>\r\n        </InputGroup.Append>\r\n      </InputGroup>\r\n      <Button className=\"mx-auto d-block\" variant=\"dark\" type=\"submit\">\r\n        {props.btnText}\r\n      </Button>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default LoadForm;\r\n","import React from 'react';\r\nimport LoadDiagram from './loadDiagram';\r\nimport LoadForm from './loadForm';\r\n\r\nconst LoadPlateCalc = props => {\r\n  const { unit, barbellWeight, calcdPlates, calcdLoad, onSubmit } = props;\r\n  const formProps = { unit, onSubmit };\r\n  const diagramProps = { unit, barbellWeight, calcdPlates, calcdLoad };\r\n\r\n  return (\r\n    <>\r\n      <div class=\"d-flex justify-content-center row\">\r\n        <h1>Barbell Loader</h1>\r\n      </div>\r\n      <LoadForm {...formProps} placeholder=\"Enter Weight\" btnText=\"Load\" />\r\n      <LoadDiagram {...diagramProps} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LoadPlateCalc;\r\n","import React from 'react';\r\nimport { Form, InputGroup, FormControl, Button } from 'react-bootstrap';\r\nimport '../css/loadForm.css';\r\n\r\nconst WarmUpSetForm = props => {\r\n  return (\r\n    <Form className=\"warmUpSetsForm\" onSubmit={e => props.onSubmit(e)}>\r\n      <InputGroup>\r\n        <FormControl\r\n          className=\"weight-input__form\"\r\n          type=\"number\"\r\n          name=\"loadInput\"\r\n          placeholder=\"weight\"\r\n          aria-label=\"weight\"\r\n          min=\"0\"\r\n          step=\"0.5\"\r\n          onFocus={e => { e.currentTarget.select(); }}\r\n        />\r\n        <InputGroup.Append>\r\n          <InputGroup.Text className=\"weight-input__text\">{props.unit} × </InputGroup.Text>\r\n        </InputGroup.Append>\r\n        <FormControl\r\n          className=\"weight-input__form\"\r\n          type=\"number\"\r\n          name=\"numRepsInput\"\r\n          placeholder=\"reps\"\r\n          aria-label=\"weight\"\r\n          min=\"0\"\r\n          step=\"1\"\r\n          defaultValue=\"5\"\r\n          onFocus={e => { e.currentTarget.select(); }}\r\n        />\r\n        <InputGroup.Append>\r\n          <InputGroup.Text className=\"weight-input__text\"></InputGroup.Text>\r\n        </InputGroup.Append>\r\n      </InputGroup>\r\n      <Button className=\"mx-auto d-block\" variant=\"dark\" type=\"submit\">{props.btnText}</Button>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default WarmUpSetForm;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Button } from 'react-bootstrap';\r\nimport '../css/warmUpSetContainer.css';\r\n\r\nconst WarmUpSetContainer = props => {\r\n  const { unit, percentage, weight, numReps, isWorkingSet, btnText } = props;\r\n  const workSetClass = isWorkingSet ? ' working-weight' : '';\r\n\r\n  return (\r\n    <div className={'set-container d-flex justify-content-between' + workSetClass}>\r\n      <div className=\"percent-container\">\r\n        <span className=\"percentage badge badge-warning\">{percentage * 100}%</span>\r\n      </div>\r\n      <span className=\"set\">{`${weight} ${unit} × ${numReps}`}</span>\r\n      <Link to=\"/home\">\r\n        <Button className=\"btn btn-dark\" onClick={() => props.onClick(weight)}>\r\n          {btnText}\r\n        </Button>\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WarmUpSetContainer;\r\n","import React from 'react';\r\nimport WarmUpSetForm from './warmUpSetForm';\r\nimport WarmUpSetContainer from './warmUpSetContainer';\r\nimport { Row } from 'react-bootstrap';\r\nimport '../css/warmUpSetCalc.css';\r\n\r\nconst WarmUpSetCalc = props => {\r\n  const { workingWeight, workingNumReps, warmUpSets, unit, onSubmit, onLoad } = props;\r\n\r\n  const contProps = { unit, onClick: onLoad };\r\n\r\n  const workingWeightContProps = {\r\n    percentage: 1,\r\n    weight: workingWeight,\r\n    numReps: workingNumReps,\r\n    isWorkingSet: true,\r\n    btnText: 'Start'\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Row className=\"d-flex justify-content-center\">\r\n        <h1>Warm Up Sets Calculator</h1>\r\n      </Row>\r\n      <WarmUpSetForm unit={unit} onSubmit={onSubmit} btnText=\"Calculate\" />\r\n      <div className=\"setList-container\">\r\n        <div className=\"setList mx-auto\">\r\n          {warmUpSets.map((set, index, array) => {\r\n            console.log(array);\r\n            const { percentage, weight, numReps } = set;\r\n            const additionalProps = { percentage, weight, numReps };\r\n            return <WarmUpSetContainer key={index} btnText=\"Load\" {...contProps} {...additionalProps} />;\r\n          })}\r\n          {workingWeight !== -1 && <WarmUpSetContainer {...contProps} {...workingWeightContProps} />}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default WarmUpSetCalc;\r\n","import React from 'react';\r\n\r\nconst About = () => {\r\n  return (\r\n    <div\r\n      className=\"center-vertically\"\r\n      style={{\r\n        textAlign: 'justify'\r\n      }}\r\n    >\r\n      Barbell Loader was inspired by{' '}\r\n      <a target=\"#blank\" href=\"https://www.happyliftingco.com/pages/rackmath\">RackMath</a> and\r\n      built from scratch by Victor Espaillat with the help of React.js and\r\n      Bootstrap.\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default About;\r\n","const modQuantity = (plateObjs, modifier) => {\r\n  return plateObjs.reduce((prev, cur) => {\r\n    // Filter out plates with 0 quantity.\r\n    if (cur.quantity > 0) {\r\n      return [\r\n        ...prev,\r\n        {\r\n          value: cur.value,\r\n          color: cur.color,\r\n          // Half quantity because we want to work with one side of barbell.\r\n          quantity: Math.floor(cur.quantity * modifier)\r\n        }\r\n      ];\r\n    }\r\n    return prev;\r\n  }, []);\r\n};\r\n\r\nconst expandFromQuantity = plateObjs => {\r\n  const array = [];\r\n  for (let plate of plateObjs) {\r\n    let j = Math.floor(plate.quantity);\r\n    while (j > 0) {\r\n      array.push({ value: plate.value, color: plate.color });\r\n      j--;\r\n    }\r\n  }\r\n  return array;\r\n};\r\n\r\nexport { modQuantity, expandFromQuantity };\r\n","import React, { Component } from 'react';\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport { ToastContainer, toast } from 'react-toastify';\nimport NavBarBottom from './components/navBarBottom';\nimport Inventory from './components/inventory';\nimport NotFound from './components/common/notFound';\nimport LoadPlateCalc from './components/loadPlateCalc';\nimport WarmUpSetCalc from './components/warmUpSetCalc';\nimport About from './components/about';\nimport { modQuantity, expandFromQuantity } from './utils/inventory';\nimport { calcBgColor } from './utils/calcBgColor';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'react-toastify/dist/ReactToastify.css';\nimport './css/App.css';\nimport './css/utils.css';\nimport './css/toastify.css';\n\nconst MAX_PLATES = 8;\n\nconst roundToNearestStep = (value, step) => {\n  const remainder = value % step;\n  if (remainder >= step / 2) return value - remainder + step;\n  return value - remainder;\n};\n\nconst calcWarmUpReps = (percentage, workingNumSets) => Math.round(workingNumSets * (2 - 4 * (percentage - 0.5)));\n\nclass App extends Component {\n  state = {\n    // Inventory related\n    unit: 'lbs',\n    barbell: {\n      lbs: 45,\n      kg: 20\n    },\n    availPlates: {\n      lbs: [\n        { value: 100, quantity: 0 },\n        { value: 65, quantity: 0 },\n        { value: 55, quantity: 0 },\n        { value: 50, quantity: 0 },\n        { value: 45, quantity: MAX_PLATES },\n        { value: 35, quantity: 0 },\n        { value: 30, quantity: 0 },\n        { value: 25, quantity: MAX_PLATES },\n        { value: 20, quantity: 0 },\n        { value: 15, quantity: 0 },\n        { value: 12.5, quantity: 0 },\n        { value: 10, quantity: MAX_PLATES },\n        { value: 7.5, quantity: 0 },\n        { value: 5, quantity: MAX_PLATES },\n        { value: 2.5, quantity: MAX_PLATES },\n        { value: 1.25, quantity: 0 },\n        { value: 1, quantity: 0 },\n        { value: 0.75, quantity: 0 },\n        { value: 0.5, quantity: 0 },\n        { value: 0.25, quantity: 0 }\n      ],\n      kg: [\n        { value: 50, quantity: 0 },\n        { value: 45, quantity: 0 },\n        { value: 35, quantity: 0 },\n        { value: 30, quantity: 0 },\n        { value: 25, quantity: 0 },\n        { value: 20, quantity: MAX_PLATES },\n        { value: 15, quantity: 0 },\n        { value: 12.5, quantity: 0 },\n        { value: 10, quantity: MAX_PLATES },\n        { value: 7.5, quantity: 0 },\n        { value: 5, quantity: MAX_PLATES },\n        { value: 3, quantity: 0 },\n        { value: 2.5, quantity: MAX_PLATES },\n        { value: 2, quantity: 0 },\n        { value: 1.5, quantity: 0 },\n        { value: 1.25, quantity: MAX_PLATES },\n        { value: 1, quantity: 0 },\n        { value: 0.75, quantity: 0 },\n        { value: 0.5, quantity: 0 },\n        { value: 0.25, quantity: 0 }\n      ]\n    },\n    calcdPlates: [],\n    calcdLoad: -1,\n\n    // Warm Up related\n    percentages: [0.5, 0.6, 0.7, 0.8, 0.9],\n    workingWeight: -1,\n    workingNumReps: -1,\n    warmUpSets: [\n      /* {percentage, weight, numReps}, ... */\n    ]\n  };\n\n  componentDidMount() {\n    let availPlates = {};\n\n    ['lbs', 'kg'].forEach(unit => {\n      availPlates[unit] = this.state.availPlates[unit].map((plate, index) => ({\n        ...plate,\n        color: calcBgColor(index)\n      }));\n    });\n\n    this.setState({ availPlates });\n  }\n\n  render() {\n    const {\n      unit,\n      barbell,\n      calcdPlates,\n      calcdLoad,\n      availPlates,\n      workingWeight,\n      workingNumReps,\n      warmUpSets\n    } = this.state;\n\n    const loaderProps = { unit, barbellWeight: barbell[unit], calcdPlates, calcdLoad, onSubmit: this.handleLoadSubmit };\n    const invProps = {\n      unit,\n      barbell,\n      availPlates,\n      onPlateGroupClick: this.handlePlateGroupClick,\n      onUnitClick: this.handleUnitClick,\n      onClear: this.handlePlateGroupsClear\n    };\n    const warmUpProps = {\n      unit,\n      workingWeight,\n      workingNumReps,\n      warmUpSets,\n      onSubmit: this.handleWorkSetSubmit,\n      onLoad: this.handleLoad\n    };\n    return (\n      <>\n        <div className=\"container\" style={{ paddingBottom: '70px' }}>\n          <ToastContainer\n            limit={1}\n            autoClose={2000}\n            hideProgressBar\n            pauseOnFocusLoss={false}\n            draggable={false}\n            pauseOnHover={false}\n          />\n          <Switch>\n            <Route path=\"/home\" render={() => <LoadPlateCalc {...loaderProps} />} />\n            <Route path=\"/inventory\" render={() => <Inventory {...invProps} />} />\n            <Route path=\"/warmup\" render={() => <WarmUpSetCalc {...warmUpProps} />} />\n            <Route path=\"/about\" component={About}></Route>\n            <Route path=\"/not-found\" component={NotFound} />\n            <Redirect from=\"/\" exact to=\"/home\" />\n            <Redirect to=\"/not-found\" />\n          </Switch>\n        </div>\n        <NavBarBottom />\n      </>\n    );\n  }\n\n  handleUnitClick = e => {\n    let { unit } = this.state;\n    if (unit === 'lbs') unit = 'kg';\n    else unit = 'lbs';\n\n    this.setState({\n      unit,\n      calcdPlates: [], // reset calculated plates\n      calcdLoad: -1,\n      workingWeight: -1, // reset working weight\n      warmUpSets: [] // reset working weight\n    });\n\n    e.currentTarget.classList.add('animate-wiggle');\n    e.currentTarget.classList.remove('animate-wiggle');\n  };\n\n  handlePlateGroupClick = value => {\n    const { unit } = this.state;\n    const cpy = { ...this.state.availPlates };\n    const i = cpy[unit].findIndex(element => element.value === value);\n    cpy[unit][i].quantity = (cpy[unit][i].quantity + 2) % (MAX_PLATES + 2);\n    this.setState({ availPlates: cpy });\n  };\n\n  handleLoadSubmit = e => {\n    e.preventDefault();\n    // Blur in order to hide keyboard on mobile.\n    e.currentTarget.firstElementChild.firstElementChild.blur();\n    console.log(e.currentTarget.firstElementChild.firstElementChild);\n    this.handleLoad(e.currentTarget.loadInput.value);\n    // e.currentTarget.loadInput.value = '';\n  };\n\n  handleLoad = load => {\n    const { unit, availPlates } = this.state;\n    const barbellWeight = this.state.barbell[unit];\n    const halfQuantity = modQuantity(availPlates[unit], 0.5);\n    const plateObjs = expandFromQuantity(halfQuantity);\n    const { valid, errMsg } = this.validateLoad(load, barbellWeight, plateObjs);\n\n    if (!valid) {\n      this.setState({ calcdPlates: [], calcdLoad: -1 });\n      toast.error(errMsg);\n    } else {\n      const { success, warn, calcdPlates, roundedOffAmount } = this.calculatePlates(load, barbellWeight, plateObjs);\n\n      if (warn === 'justbar') toast.success('Just the bar!');\n      else if (warn === 'roundoff') toast.warn(`${roundedOffAmount} ${unit} has been rounded off.`);\n      else if (warn === 'room') toast.error('Not enough room on the bar!');\n\n      if (success) {\n        const calcdLoad = calcdPlates.reduce((acc, cur) => acc + cur.value, 0) * 2 + barbellWeight;\n        this.setState({ calcdPlates, calcdLoad });\n      } else this.setState({ calcdPlates: [], calcdLoad: -1 });\n    }\n  };\n\n  validateLoad = (load, barbell, plateObjs) => {\n    if (load < barbell)\n      return {\n        valid: false,\n        errMsg: \"That's not even the bar!\"\n      };\n\n    const totalWeightAvail = barbell + 2 * plateObjs.reduce((acc, cur) => acc + cur.value, 0);\n\n    if (load > totalWeightAvail)\n      return {\n        valid: false,\n        errMsg: \"Your inventory doesn't work with that weight\"\n      };\n\n    return { valid: true };\n  };\n\n  /**\n   * Returns an array containing the plates objects that must loaded on one side\n   * of a barbell in order to meet a target load. If not possible, the success\n   * flag will be false.\n   * @param {Number} targetLoad - Weight to load onto barbell.\n   * @param {Number} barbellWeight - Weight of the barbell.\n   * @param {Object[]} plateObjs - Available plate objects for one side of bar.\n   * @param {Number} plateObjs[].value - The plate's weight.\n   * @param {String} plateObjs[].color - The plate's color.\n   */\n  calculatePlates = (targetLoad, barbellWeight, plateObjs) => {\n    let workingLoad = targetLoad - barbellWeight;\n    let success = true;\n    let calcdPlates = [];\n\n    if (workingLoad === 0) return { success, warn: 'justbar', calcdPlates };\n\n    // Work with one side of the barbell. Presumably, both sides are identical.\n    workingLoad /= 2;\n    for (let plate of plateObjs) {\n      if (workingLoad >= plate.value) {\n        calcdPlates.push(plate);\n        if (calcdPlates.length > MAX_PLATES) return { success: false, warn: 'room' };\n        workingLoad -= plate.value;\n      }\n    }\n    if (workingLoad !== 0) return { success, warn: 'roundoff', roundedOffAmount: workingLoad * 2, calcdPlates };\n    return { success, calcdPlates };\n  };\n\n  handleWorkSetSubmit = e => {\n    e.preventDefault();\n    e.currentTarget.firstElementChild.querySelectorAll('input').forEach(elem => {\n      elem.blur();\n    });\n    const { value: workingWeight } = e.currentTarget.loadInput;\n    const { value: workingNumReps } = e.currentTarget.numRepsInput;\n\n    if (workingWeight && workingNumReps) {\n      const warmUpSets = [];\n      const { percentages } = this.state;\n      percentages.forEach(percentage => {\n        warmUpSets.push({\n          percentage,\n          weight: roundToNearestStep(workingWeight * percentage, 5),\n          numReps: calcWarmUpReps(percentage, workingNumReps)\n        });\n      });\n      this.setState({ workingWeight, workingNumReps, warmUpSets });\n    } else this.setState({ workingWeight: -1, workingNumReps: -1, warmUpSets: [] });\n  };\n\n  handlePlateGroupsClear = () => {\n    const { unit } = this.state;\n    let availPlates = { ...this.state.availPlates };\n    availPlates[unit] = availPlates[unit].map(({ value, color }) => ({ value, quantity: 0, color }));\n    this.setState({ availPlates });\n  };\n}\n\nexport default App;\n","export const calcBgColor = input => {\r\n  if (input % 6 === 0) return 'black';\r\n  if (input % 5 === 0) return 'yellow';\r\n  if (input % 4 === 0) return 'red';\r\n  if (input % 3 === 0) return 'purple';\r\n  if (input % 2 === 0) return 'green';\r\n  return 'cyan';\r\n};\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport App from './App';\nimport './css/index.css';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}